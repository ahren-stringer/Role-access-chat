[{"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\index.js":"1","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\App.js":"2","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\HOC\\routes.jsx":"3","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Auth\\Auth.jsx":"4","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Header\\Header.jsx":"5","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\Chats.jsx":"6","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Chat\\Chat.jsx":"7","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\redux\\Store.js":"8","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\redux\\authReduser.js":"9","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\API\\api.js":"10","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\Main.jsx":"11","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Auth\\Register.jsx":"12","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\validators.js":"13","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Users\\Users.jsx":"14","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Users\\UsersList.jsx":"15","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\redux\\profileReduser.js":"16","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Preloader\\Preloader.jsx":"17","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\ChatsContainer.jsx":"18"},{"size":408,"mtime":1612112648716,"results":"19","hashOfConfig":"20"},{"size":2697,"mtime":1612135805096,"results":"21","hashOfConfig":"20"},{"size":991,"mtime":1612137840528,"results":"22","hashOfConfig":"20"},{"size":4108,"mtime":1612135223057,"results":"23","hashOfConfig":"20"},{"size":666,"mtime":1612129832757,"results":"24","hashOfConfig":"20"},{"size":3904,"mtime":1612121048200,"results":"25","hashOfConfig":"20"},{"size":4506,"mtime":1612120867253,"results":"26","hashOfConfig":"20"},{"size":398,"mtime":1612123793312,"results":"27","hashOfConfig":"20"},{"size":2421,"mtime":1612135127958,"results":"28","hashOfConfig":"20"},{"size":0,"mtime":1612030323256,"results":"29","hashOfConfig":"20"},{"size":678,"mtime":1612137860906,"results":"30","hashOfConfig":"20"},{"size":3796,"mtime":1612119838566,"results":"31","hashOfConfig":"20"},{"size":645,"mtime":1609939464245,"results":"32","hashOfConfig":"20"},{"size":447,"mtime":1612121248000,"results":"33","hashOfConfig":"20"},{"size":107,"mtime":1612120498423,"results":"34","hashOfConfig":"20"},{"size":869,"mtime":1612123754542,"results":"35","hashOfConfig":"20"},{"size":504,"mtime":1612131499422,"results":"36","hashOfConfig":"20"},{"size":187,"mtime":1612137813891,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"f1per7",{"filePath":"42","messages":"43","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\index.js",["84"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from '../src/redux/Store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render( \n\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n\n    document.getElementById('root')\n);",["85","86"],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\App.js",["87","88","89","90","91","92","93","94","95","96","97","98"],"import axios from 'axios';\nimport { useCallback, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route, Router, withRouter } from 'react-router-dom';\nimport './App.css';\nimport Auth from './Components/Auth/Auth';\nimport Register from './Components/Auth/Register';\nimport Main from './Components/Main/Main';\nimport Preloader from './Components/Preloader/Preloader';\nimport { useRotes } from './HOC/routes';\nimport { setProfile, setLogin, setLoaded, setToken } from './redux/authReduser'\n\nfunction App(props) {\n\n  let [token, setToken] = useState(props.token)\n\n  useEffect(async () => {\n    const data = JSON.parse(localStorage.getItem('userData'))\n    if (data && data.token) {\n      let req = await axios.get('http://localhost:8001/profile/' + data.id)\n      props.setProfile(data.token, data.id,\n        req.data.name,\n        req.data.email,\n        req.data.contacts,\n        req.data.messages,\n        req.data.invites,\n        req.data.groups\n      )\n    }\n  }, []);\n\n  // useEffect(()=>{\n  //   setToken(props.token)\n  // },[props.token])\n  let routes = useRotes(!!props.token)\n  // if (!props.loaded) return <Preloader/>\n  return <div>\n    <BrowserRouter>\n      {/* {isAuth && <Navbar/>} */}\n      <div className='container'>\n        {routes}\n      </div>\n    </BrowserRouter>\n  </div>\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    loaded: state.auth.loaded,\n    token: state.auth.token,\n    userId: state.auth.userId,\n    // name: state.auth.name,\n    // email: state.auth.email,\n    // contacts: state.auth.contacts,\n    // messages: state.auth.messages,\n    // invites: state.auth.invites,\n    // groups: state.auth.groups\n  }\n}\n\nexport default connect(mapStateToProps, { setProfile, setLogin, setLoaded, setToken })(App);\n // const login = useCallback(( token, id, name, email, contacts, messages, invites, groups) => {\n  //   props.setProfile(token, id, name, email, contacts, messages, invites, groups)\n  //   localStorage.setItem('userData', JSON.stringify({ id: id, token: token }))\n  // }, []);\n\n  // props.setLogin(login)\n\n  // useEffect(async () => {\n  //   const data = JSON.parse(localStorage.getItem('userData'))\n  //   debugger\n  //   if (data && data.token) {\n  //     let req = await axios.get('http://localhost:8001/profile/'+data.id)\n  //     login(data.token, data.userId,\n  //       req.data.name,\n  //       req.data.email,\n  //       req.data.contacts,\n  //       req.data.messages,\n  //       req.data.invites,\n  //       req.data.groups\n  //     )\n  //   }\n  //   props.setLoaded(true)\n  //   debugger\n  // }, [login]);\n\n  // let routes = useRotes(!!props.token)\n  // console.log(props.loaded)\n  // debugger","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\HOC\\routes.jsx",["99"],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Auth\\Auth.jsx",["100","101","102"],"import './Auth.module.css';\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { setProfile,setLoaded } from '../../redux/authReduser'\r\nimport axios from 'axios';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { required, aol, email, minLength6 } from '../../validators'\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 340,\r\n        margin: '40px auto 0'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    input: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    }\r\n}));\r\n\r\nconst input = ({ input, label, type, name, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <div>\r\n            <TextField\r\n                //error\r\n                id=\"standard-error-helper-text\"\r\n                //label=\"Error\"\r\n                label={label}\r\n                type={type}\r\n                {...input}\r\n            // helperText={touched &&\r\n            //     ((error && { error }) ||\r\n            //         (warning && { warning }))}\r\n            />\r\n        </div>\r\n        // <div className=\"cf\">\r\n        //     <label for={name}>{label}<span className=\"required\">*</span></label>\r\n        //     <input {...input} name={name} type={type} id={name} size=\"35\" />\r\n        //     {touched &&\r\n        //         ((error && <span>{error}</span>) ||\r\n        //             (warning && <span>{warning}</span>))}\r\n        // </div>\r\n    )\r\n}\r\n\r\nfunction AuthForm(props) {\r\n    const { submitting } = props\r\n    const classes = useStyles();\r\n\r\n    return <form onSubmit={props.handleSubmit} className={classes.input}\r\n    >\r\n        <Field\r\n            name=\"email\"\r\n            type=\"email\"\r\n            component={input}\r\n            label=\"Email\"\r\n            validate={[required, email]}\r\n            warn={aol}\r\n        />\r\n\r\n        <Field\r\n            name=\"password\"\r\n            type=\"password\"\r\n            component={input}\r\n            label=\"Пароль\"\r\n            validate={[required, minLength6]}\r\n            warn={aol}\r\n        />\r\n        <div style={{ margin: '22px 0 10px 8px' }}>\r\n            <Button type=\"submit\" disabled={submitting} variant=\"contained\" style={{ marginRight: '8px' }}>Войти</Button>\r\n            <Button variant=\"contained\">\r\n                <NavLink to='/register'>Зарегистрироваться</NavLink>\r\n            </Button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nAuthForm = reduxForm({ form: 'auth' })(AuthForm)\r\n\r\nfunction Auth(props) {\r\n    const classes = useStyles();\r\n    let submit = async (formData) => {\r\n        try {\r\n            let req = await axios.post('http://localhost:8001/login', { ...formData })\r\n            debugger\r\n            props.setProfile(\r\n                req.data.token, \r\n                req.data.userId,\r\n                req.data.name,\r\n                req.data.email,\r\n                req.data.contacts,\r\n                req.data.messages,\r\n                req.data.invites,\r\n                req.data.groups\r\n            )\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    Вход\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <AuthForm onSubmit={submit} />\r\n\r\n        </Card>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setProfile,setLoaded })(withRouter(Auth));\r\n","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Header\\Header.jsx",[],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\Chats.jsx",["103","104"],"import { NavLink } from 'react-router-dom';\r\nimport './Chats.css';\r\n\r\nfunction Chats() {\r\n    let contacts=true;\r\n\r\n    return <div className='im_dialogs_col_wrap noselect'>\r\n        <div className='im_dialogs_panel'>\r\n            <div className='im_dialogs_search'>\r\n                <input className=\"form-control im_dialogs_search_field no_outline ng-valid ng-dirty ng-touched ng-empty\"></input>\r\n                <a className=''>\r\n                    <i className=''></i>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div className='im_dialogs_col' style={{height:'100vh'}}>\r\n            <div className='im_dialogs_wrap nano has-scrollbar active-scrollbar'>\r\n                <div className='im_dialogs_scrollable_wrap nano-content' style={{right:'-17px'}}>\r\n                    {contacts ? <NavLink to='/users'>Добавить</NavLink>\r\n                    :<ul className='nav nav-pills nav-stacked'>\r\n                        <li className='im_dialog_wrap'> \r\n                            <a className='im_dialog'>\r\n                                <div className='im_dialog_meta pull-right text-right'>\r\n                                    <div className='im_dialog_date'>\r\n                                        12:31 AM\r\n                                    </div>\r\n                                    <span className='im_dialog_badge badge im_dialog_badge_muted'>\r\n                                        1\r\n                                    </span>\r\n                                </div>\r\n                                <div className='im_dialog_photo pull-left peer_photo_init'>\r\n                                    <span className='peer_initials nocopy im_dialog_photo user_bgcolor_5'>\r\n                                        PM\r\n                                    </span>\r\n                                </div>\r\n                                <div className='im_dialog_message_wrap'>\r\n                                    <div className='im_dialog_peer'>\r\n                                        <span className=''>\r\n                                            Влад\r\n                                        </span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div className=\"im_dialog_message\">\r\n                                            <span>\r\n                                                <span>\r\n                                                    <span className='im_dialog_chat_from_wrap'>\r\n                                                        <span className='im_dialog_chat_from'>\r\n                                                            Вадим\r\n                                                        </span>\r\n                                                        <span>\r\n                                                            :\r\n                                                        </span>\r\n                                                    </span>\r\n                                                </span>\r\n                                            </span>\r\n                                            <span >\r\n                                                <span className='im_short_message_text'>\r\n                                                а, да это просто задание такое))\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        </li>\r\n                    </ul>}\r\n                </div>\r\n                <div className='nano-pane' style={{display: 'block'}}>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Chats;","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Chat\\Chat.jsx",["105","106"],"import './Chat.css';\r\n\r\nfunction Chat() {\r\n    let chosen = true;\r\n    \r\n    return <div className='im_history_col_wrap noselect im_history_loaded'>\r\n        {!chosen ? <div className='im_history_not_selected_wrap'>\r\n            <div className='im_history_not_selected vertical-aligned' style={{ paddingTop: '229px', paddingBottom: '229px' }}>\r\n                Выберите чат для общения\r\n            </div>\r\n        </div>\r\n            : <div className='im_history_selected_wrap'>\r\n                <div className=\"im_history_wrap nano has-scrollbar active-scrollbar\" style={{ height: '481px' }}>\r\n                    <div className='im_history_scrollable_wrap nano-content' style={{ marginRight: '-17px' }}>\r\n                        <div className=''>\r\n                            <div className='im_history im_history_selectable'>\r\n                                <div classNmae=\"im_history_messages im_history_messages_group\">\r\n                                    {/* Loading More */}\r\n                                    <div className='im_history_messages_peer'>\r\n                                        {/* Сообщения */}\r\n                                        <div className='im_history_message_wrap'>\r\n                                            {/* Дата */}\r\n                                            <div class=\"im_message_outer_wrap hasselect\">\r\n\r\n                                                <div class=\"im_message_wrap clearfix\" >\r\n\r\n                                                    <div>\r\n                                                        <i class=\"icon icon-select-tick\"></i>\r\n\r\n                                                        <a class=\"im_message_from_photo pull-left peer_photo_init\"><span class=\"peer_initials nocopy im_message_from_photo user_bgcolor_5\"></span></a>\r\n\r\n                                                        <div class=\"im_message_meta pull-right text-right noselect\">\r\n\r\n                                                            <span class=\"im_message_date clickable\">\r\n                                                                <span class=\"im_message_edited\"></span>\r\n                                                                <span class=\"im_message_date_text nocopy\"></span>\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                        <div class=\"im_message_body\">\r\n\r\n                                                            <span class=\"im_message_author_wrap\">\r\n                                                                <span class=\"copyonly\">[<span>7:08:03 PM</span>] </span><a class=\"im_message_author user_color_5\">Viacheslav Barkov</a><span class=\"copyonly\">:</span><span class=\"im_message_author_admin\" style={{display: 'none'}}></span>\r\n                                                            </span>\r\n\r\n                                                            <div my-message-body=\"historyMessage\">\r\n                                                                <div class=\"im_message_text\" dir=\"auto\">Всем добрый вечер. Немного спама.</div>\r\n                                                                {/* <div class=\"im_message_media\" style=\"display: none;\"></div>\r\n                                                                <div class=\"im_message_sign\" style=\"display: none;\"></div>\r\n                                                                <div class=\"im_message_keyboard\" style=\"display: none;\"></div> */}\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* Cообщение */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=''>\r\n\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Chat;","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\redux\\Store.js",["107"],"import authReduser from \"./authReduser\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport profileReduser from \"./profileReduser\";\r\n\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\nlet redusers= combineReducers({\r\n    auth: authReduser,\r\n    profile: profileReduser,\r\n    form: formReducer,\r\n});\r\n\r\nlet store=createStore(redusers);\r\n\r\nexport default store","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\redux\\authReduser.js",["108","109"],"const LOGIN = 'authReuser/LOGIN';\r\nconst LOGOUT = 'authReuser/LOGOUT';\r\nconst SET_LOADED = 'authReuser/SET-LOADED';\r\nconst SET_TOKEN = 'authReuser/SET-TOKEN';\r\nconst SET_USER_ID = 'authReuser/SET-LOADED';\r\nconst SET_LOGIN = 'authReuser/SET-LOGIN';\r\nconst SET_PROFILE_DATA = 'authReuser/SET_PROFILE_DATA';\r\n\r\nlet init = {\r\n    token: null,\r\n    id: null,\r\n    loaded: false,\r\n    isAuth: false,\r\n    login: () => { },\r\n    //Данные\r\n    name: null,\r\n    email: null,\r\n    contacts: null,\r\n    messages: null,\r\n    invites: null,\r\n    groups: null\r\n};\r\n\r\nconst authReduser = (state = init, action) => {\r\n    switch (action.type) {\r\n        // case LOGIN:\r\n        //     localStorage.setItem('userData', JSON.stringify({ userId: action.id, token: action.jwtToken }))\r\n        //     return { ...state, userId: action.id, token: action.jwtToken}\r\n        case LOGOUT:\r\n            localStorage.removeItem('userData')\r\n            return { ...state, token: null, userId: null }\r\n        case SET_LOADED:\r\n            return { ...state, loaded: action.loaded }\r\n        case SET_PROFILE_DATA:\r\n            localStorage.setItem('userData', JSON.stringify({ id: action.id, token: action.token }))\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                email: action.email,\r\n                contacts: action.contacts,\r\n                messages: action.messages,\r\n                invites: action.invites,\r\n                groups: action.groups,\r\n                token: action.token,\r\n                id:action.id\r\n            }\r\n        case SET_TOKEN:\r\n            return { ...state, token: action.token }\r\n        // case SET_USER_ID:\r\n        //     return { ...state, userId: action.userId }\r\n        case SET_LOGIN:\r\n            return { ...state, login: action.login }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setProfile = (token, id, name, email, contacts, messages, invites, groups) => (\r\n    { type: SET_PROFILE_DATA, token, id, name, email, contacts, messages, invites, groups }\r\n);\r\nexport const logout = () => ({ type: LOGOUT, });\r\nexport const setLoaded = (loaded) => ({ type: SET_LOADED, loaded });\r\nexport const setToken = (token) => ({ type: SET_TOKEN, token });\r\n// export const setUserId = (userId) => ({ type: SET_USER_ID, userId });\r\nexport const setLogin = (login) => ({ type: SET_LOGIN, login });\r\n\r\n\r\nexport default authReduser","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\API\\api.js",[],["110","111"],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\Main.jsx",[],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Auth\\Register.jsx",["112","113","114","115","116"],"import './Auth.module.css';\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport axios from 'axios';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { required, aol, email, minLength6 } from '../../validators'\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 340,\r\n        margin: '40px auto 0'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    input: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    }\r\n}));\r\n\r\nconst input = ({ input, label, type, name, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <div>\r\n            <TextField\r\n                //error\r\n                id=\"standard-error-helper-text\"\r\n                //label=\"Error\"\r\n                label={label}\r\n                type={type}\r\n                {...input}\r\n            // helperText={touched &&\r\n            //     ((error && { error }) ||\r\n            //         (warning && { warning }))}\r\n            />\r\n        </div>\r\n        // <div className=\"cf\">\r\n        //     <label for={name}>{label}<span className=\"required\">*</span></label>\r\n        //     <input {...input} name={name} type={type} id={name} size=\"35\" />\r\n        //     {touched &&\r\n        //         ((error && <span>{error}</span>) ||\r\n        //             (warning && <span>{warning}</span>))}\r\n        // </div>\r\n    )\r\n}\r\n\r\nfunction RegisterForm(props) {\r\n    const { submitting } = props\r\n    const classes = useStyles();\r\n\r\n    return <form onSubmit={props.handleSubmit} className={classes.input}>\r\n        <Field\r\n            name=\"name\"\r\n            type=\"text\"\r\n            component={input}\r\n            label=\"Имя\"\r\n            validate={[required]}\r\n            warn={aol}\r\n        />\r\n        <Field\r\n            name=\"email\"\r\n            type=\"email\"\r\n            component={input}\r\n            label=\"Email\"\r\n            validate={[required, email]}\r\n            warn={aol}\r\n        />\r\n\r\n        <Field\r\n            name=\"password\"\r\n            type=\"password\"\r\n            component={input}\r\n            label=\"Пароль\"\r\n            validate={[required, minLength6]}\r\n            warn={aol}\r\n        />\r\n        <div style={{ margin: '22px 0 10px 8px' }}>\r\n            <Button type=\"submit\" disabled={submitting} variant=\"contained\" style={{ marginRight: '8px' }}>Зарегистрироваться</Button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nRegisterForm = reduxForm({ form: 'register' })(RegisterForm)\r\n\r\nfunction Register(props) {\r\n    const classes = useStyles();\r\n    let submit = async (formData) => {\r\n        try {\r\n            debugger\r\n            let req = await axios.post('http://localhost:8001/register', { ...formData })\r\n            props.history.goBack()\r\n        } catch (e) { }\r\n    }\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    Вход\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <RegisterForm onSubmit={submit} />\r\n\r\n        </Card>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(withRouter(Register));","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\validators.js",[],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Users\\Users.jsx",[],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Users\\UsersList.jsx",[],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\redux\\profileReduser.js",[],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Preloader\\Preloader.jsx",[],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\ChatsContainer.jsx",["117"],{"ruleId":"118","severity":1,"message":"119","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":23},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"118","severity":1,"message":"126","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":21},{"ruleId":"118","severity":1,"message":"127","line":4,"column":25,"nodeType":"120","messageId":"121","endLine":4,"endColumn":30},{"ruleId":"118","severity":1,"message":"128","line":4,"column":32,"nodeType":"120","messageId":"121","endLine":4,"endColumn":38},{"ruleId":"118","severity":1,"message":"129","line":4,"column":40,"nodeType":"120","messageId":"121","endLine":4,"endColumn":50},{"ruleId":"118","severity":1,"message":"130","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":12},{"ruleId":"118","severity":1,"message":"131","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":16},{"ruleId":"118","severity":1,"message":"132","line":8,"column":8,"nodeType":"120","messageId":"121","endLine":8,"endColumn":12},{"ruleId":"118","severity":1,"message":"133","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":17},{"ruleId":"118","severity":1,"message":"134","line":15,"column":8,"nodeType":"120","messageId":"121","endLine":15,"endColumn":13},{"ruleId":"118","severity":1,"message":"135","line":15,"column":15,"nodeType":"120","messageId":"121","endLine":15,"endColumn":23},{"ruleId":"136","severity":1,"message":"137","line":17,"column":13,"nodeType":"138","endLine":30,"endColumn":4},{"ruleId":"136","severity":1,"message":"139","line":30,"column":6,"nodeType":"140","endLine":30,"endColumn":8,"suggestions":"141"},{"ruleId":"118","severity":1,"message":"133","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":17},{"ruleId":"118","severity":1,"message":"142","line":2,"column":17,"nodeType":"120","messageId":"121","endLine":2,"endColumn":25},{"ruleId":"118","severity":1,"message":"143","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":93,"column":1,"nodeType":"120","messageId":"146","endLine":93,"endColumn":9},{"ruleId":"147","severity":1,"message":"148","line":11,"column":17,"nodeType":"149","endLine":11,"endColumn":33},{"ruleId":"147","severity":1,"message":"148","line":22,"column":29,"nodeType":"149","endLine":22,"endColumn":54},{"ruleId":"147","severity":1,"message":"148","line":30,"column":57,"nodeType":"149","endLine":30,"endColumn":116},{"ruleId":"147","severity":1,"message":"148","line":43,"column":121,"nodeType":"149","endLine":43,"endColumn":163},{"ruleId":"118","severity":1,"message":"150","line":5,"column":39,"nodeType":"120","messageId":"121","endLine":5,"endColumn":54},{"ruleId":"118","severity":1,"message":"151","line":1,"column":7,"nodeType":"120","messageId":"121","endLine":1,"endColumn":12},{"ruleId":"118","severity":1,"message":"152","line":5,"column":7,"nodeType":"120","messageId":"121","endLine":5,"endColumn":18},{"ruleId":"122","replacedBy":"153"},{"ruleId":"124","replacedBy":"154"},{"ruleId":"118","severity":1,"message":"142","line":2,"column":17,"nodeType":"120","messageId":"121","endLine":2,"endColumn":25},{"ruleId":"118","severity":1,"message":"143","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":19},{"ruleId":"118","severity":1,"message":"155","line":13,"column":10,"nodeType":"120","messageId":"121","endLine":13,"endColumn":17},{"ruleId":"144","severity":1,"message":"156","line":97,"column":1,"nodeType":"120","messageId":"146","endLine":97,"endColumn":13},{"ruleId":"118","severity":1,"message":"157","line":104,"column":17,"nodeType":"120","messageId":"121","endLine":104,"endColumn":20},{"ruleId":"118","severity":1,"message":"155","line":1,"column":10,"nodeType":"120","messageId":"121","endLine":1,"endColumn":17},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["158"],"no-negated-in-lhs",["159"],"'useCallback' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'withRouter' is defined but never used.","'Auth' is defined but never used.","'Register' is defined but never used.","'Main' is defined but never used.","'Preloader' is defined but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["160"],"'useState' is defined but never used.","'CardActions' is defined but never used.","no-func-assign","'AuthForm' is a function.","isAFunction","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'applyMiddleware' is assigned a value but never used.","'LOGIN' is assigned a value but never used.","'SET_USER_ID' is assigned a value but never used.",["158"],["159"],"'NavLink' is defined but never used.","'RegisterForm' is a function.","'req' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},"Update the dependencies array to be: [props]",{"range":"163","text":"164"},[1018,1020],"[props]"]