[{"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\index.js":"1","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\App.js":"2","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\HOC\\routes.jsx":"3","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Auth\\Auth.jsx":"4","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Header\\Header.jsx":"5","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\Chats.jsx":"6","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Chat\\Chat.jsx":"7","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\redux\\Store.js":"8","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\redux\\authReduser.js":"9","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\API\\api.js":"10","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\Main.jsx":"11","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Auth\\Register.jsx":"12","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\validators.js":"13","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Users\\Users.jsx":"14","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Users\\UsersList.jsx":"15","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\redux\\profileReduser.js":"16","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Preloader\\Preloader.jsx":"17","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\ChatsContainer.jsx":"18","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\index.js":"19","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\App.js":"20","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\redux\\Store.js":"21","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\redux\\authReduser.js":"22","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\redux\\profileReduser.js":"23","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\HOC\\routes.jsx":"24","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\Main.jsx":"25","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Preloader\\Preloader.jsx":"26","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Auth\\Register.jsx":"27","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Auth\\Auth.jsx":"28","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\validators.js":"29","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Users\\Users.jsx":"30","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\ChatsContainer.jsx":"31","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Header\\Header.jsx":"32","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chat\\Chat.jsx":"33","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\Chats.jsx":"34","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Users\\UsersList.jsx":"35","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\Search.jsx":"36","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\SingleChat.jsx":"37","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\redux\\groupsReduser.js":"38","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\redux\\messagesReduser.js":"39","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chat\\ChatContainer.jsx":"40","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\Groups.jsx":"41","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\CreateChanel.jsx":"42","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\RightsSetingForm.jsx":"43","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\SingleRightSettings.jsx":"44","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\GroupSetingForm.jsx":"45","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\SingleGroupSettings.jsx":"46","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\AddUsersForm.jsx":"47","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\SingleRightPopup.jsx":"48","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\redux\\searchReduser.js":"49","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\DAL\\api.js":"50","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\CreateGroup.jsx":"51"},{"size":408,"mtime":1612112648716,"results":"52","hashOfConfig":"53"},{"size":2697,"mtime":1612135805096,"results":"54","hashOfConfig":"53"},{"size":991,"mtime":1612137840528,"results":"55","hashOfConfig":"53"},{"size":4108,"mtime":1612135223057,"results":"56","hashOfConfig":"53"},{"size":666,"mtime":1612129832757,"results":"57","hashOfConfig":"53"},{"size":3904,"mtime":1612121048200,"results":"58","hashOfConfig":"53"},{"size":4506,"mtime":1612120867253,"results":"59","hashOfConfig":"53"},{"size":398,"mtime":1612123793312,"results":"60","hashOfConfig":"53"},{"size":2421,"mtime":1612135127958,"results":"61","hashOfConfig":"53"},{"size":0,"mtime":1612030323256,"results":"62","hashOfConfig":"53"},{"size":678,"mtime":1612137860906,"results":"63","hashOfConfig":"53"},{"size":3796,"mtime":1612119838566,"results":"64","hashOfConfig":"53"},{"size":645,"mtime":1609939464245,"results":"65","hashOfConfig":"53"},{"size":447,"mtime":1612121248000,"results":"66","hashOfConfig":"53"},{"size":107,"mtime":1612120498423,"results":"67","hashOfConfig":"53"},{"size":869,"mtime":1612123754542,"results":"68","hashOfConfig":"53"},{"size":504,"mtime":1612131499422,"results":"69","hashOfConfig":"53"},{"size":187,"mtime":1612137813891,"results":"70","hashOfConfig":"53"},{"size":408,"mtime":1612192223000,"results":"71","hashOfConfig":"72"},{"size":5842,"mtime":1621980355878,"results":"73","hashOfConfig":"72"},{"size":677,"mtime":1622050235568,"results":"74","hashOfConfig":"72"},{"size":2355,"mtime":1612192223000,"results":"75","hashOfConfig":"72"},{"size":837,"mtime":1612192223000,"results":"76","hashOfConfig":"72"},{"size":1210,"mtime":1622075196746,"results":"77","hashOfConfig":"72"},{"size":5916,"mtime":1622235747199,"results":"78","hashOfConfig":"72"},{"size":481,"mtime":1612192223000,"results":"79","hashOfConfig":"72"},{"size":3682,"mtime":1621252832082,"results":"80","hashOfConfig":"72"},{"size":3973,"mtime":1612192223000,"results":"81","hashOfConfig":"72"},{"size":630,"mtime":1612192223000,"results":"82","hashOfConfig":"72"},{"size":1388,"mtime":1622049276592,"results":"83","hashOfConfig":"72"},{"size":1225,"mtime":1622231271570,"results":"84","hashOfConfig":"72"},{"size":1210,"mtime":1622229296494,"results":"85","hashOfConfig":"72"},{"size":6600,"mtime":1621980429070,"results":"86","hashOfConfig":"72"},{"size":5574,"mtime":1622231306502,"results":"87","hashOfConfig":"72"},{"size":7293,"mtime":1622060737556,"results":"88","hashOfConfig":"72"},{"size":437,"mtime":1615662506355,"results":"89","hashOfConfig":"72"},{"size":2630,"mtime":1620858932733,"results":"90","hashOfConfig":"72"},{"size":4517,"mtime":1622231274576,"results":"91","hashOfConfig":"72"},{"size":690,"mtime":1621980589961,"results":"92","hashOfConfig":"72"},{"size":4275,"mtime":1621980399549,"results":"93","hashOfConfig":"72"},{"size":1844,"mtime":1622076314814,"results":"94","hashOfConfig":"72"},{"size":1961,"mtime":1622236286798,"results":"95","hashOfConfig":"72"},{"size":3186,"mtime":1620920678680,"results":"96","hashOfConfig":"72"},{"size":2192,"mtime":1622031533834,"results":"97","hashOfConfig":"72"},{"size":8086,"mtime":1622035457274,"results":"98","hashOfConfig":"72"},{"size":2592,"mtime":1620859012776,"results":"99","hashOfConfig":"72"},{"size":3255,"mtime":1622235821900,"results":"100","hashOfConfig":"72"},{"size":5423,"mtime":1622034326848,"results":"101","hashOfConfig":"72"},{"size":3927,"mtime":1622054818699,"results":"102","hashOfConfig":"72"},{"size":4822,"mtime":1622054843550,"results":"103","hashOfConfig":"72"},{"size":3781,"mtime":1622074713819,"results":"104","hashOfConfig":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},"f1per7",{"filePath":"109","messages":"110","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"108"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"153"},"j4yq09",{"filePath":"154","messages":"155","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"153"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"153"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"153"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"153"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"153"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"153"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"153"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"153"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"153"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"153"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"153"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"153"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"153"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"153"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"153"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"153"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"153"},"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\index.js",["237"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from '../src/redux/Store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render( \n\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n\n    document.getElementById('root')\n);",["238","239"],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\App.js",["240","241","242","243","244","245","246","247","248","249","250","251"],"import axios from 'axios';\nimport { useCallback, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route, Router, withRouter } from 'react-router-dom';\nimport './App.css';\nimport Auth from './Components/Auth/Auth';\nimport Register from './Components/Auth/Register';\nimport Main from './Components/Main/Main';\nimport Preloader from './Components/Preloader/Preloader';\nimport { useRotes } from './HOC/routes';\nimport { setProfile, setLogin, setLoaded, setToken } from './redux/authReduser'\n\nfunction App(props) {\n\n  let [token, setToken] = useState(props.token)\n\n  useEffect(async () => {\n    const data = JSON.parse(localStorage.getItem('userData'))\n    if (data && data.token) {\n      let req = await axios.get('http://localhost:8001/profile/' + data.id)\n      props.setProfile(data.token, data.id,\n        req.data.name,\n        req.data.email,\n        req.data.contacts,\n        req.data.messages,\n        req.data.invites,\n        req.data.groups\n      )\n    }\n  }, []);\n\n  // useEffect(()=>{\n  //   setToken(props.token)\n  // },[props.token])\n  let routes = useRotes(!!props.token)\n  // if (!props.loaded) return <Preloader/>\n  return <div>\n    <BrowserRouter>\n      {/* {isAuth && <Navbar/>} */}\n      <div className='container'>\n        {routes}\n      </div>\n    </BrowserRouter>\n  </div>\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    loaded: state.auth.loaded,\n    token: state.auth.token,\n    userId: state.auth.userId,\n    // name: state.auth.name,\n    // email: state.auth.email,\n    // contacts: state.auth.contacts,\n    // messages: state.auth.messages,\n    // invites: state.auth.invites,\n    // groups: state.auth.groups\n  }\n}\n\nexport default connect(mapStateToProps, { setProfile, setLogin, setLoaded, setToken })(App);\n // const login = useCallback(( token, id, name, email, contacts, messages, invites, groups) => {\n  //   props.setProfile(token, id, name, email, contacts, messages, invites, groups)\n  //   localStorage.setItem('userData', JSON.stringify({ id: id, token: token }))\n  // }, []);\n\n  // props.setLogin(login)\n\n  // useEffect(async () => {\n  //   const data = JSON.parse(localStorage.getItem('userData'))\n  //   debugger\n  //   if (data && data.token) {\n  //     let req = await axios.get('http://localhost:8001/profile/'+data.id)\n  //     login(data.token, data.userId,\n  //       req.data.name,\n  //       req.data.email,\n  //       req.data.contacts,\n  //       req.data.messages,\n  //       req.data.invites,\n  //       req.data.groups\n  //     )\n  //   }\n  //   props.setLoaded(true)\n  //   debugger\n  // }, [login]);\n\n  // let routes = useRotes(!!props.token)\n  // console.log(props.loaded)\n  // debugger","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\HOC\\routes.jsx",["252"],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Auth\\Auth.jsx",["253","254","255"],"import './Auth.module.css';\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { setProfile,setLoaded } from '../../redux/authReduser'\r\nimport axios from 'axios';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { required, aol, email, minLength6 } from '../../validators'\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 340,\r\n        margin: '40px auto 0'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    input: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    }\r\n}));\r\n\r\nconst input = ({ input, label, type, name, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <div>\r\n            <TextField\r\n                //error\r\n                id=\"standard-error-helper-text\"\r\n                //label=\"Error\"\r\n                label={label}\r\n                type={type}\r\n                {...input}\r\n            // helperText={touched &&\r\n            //     ((error && { error }) ||\r\n            //         (warning && { warning }))}\r\n            />\r\n        </div>\r\n        // <div className=\"cf\">\r\n        //     <label for={name}>{label}<span className=\"required\">*</span></label>\r\n        //     <input {...input} name={name} type={type} id={name} size=\"35\" />\r\n        //     {touched &&\r\n        //         ((error && <span>{error}</span>) ||\r\n        //             (warning && <span>{warning}</span>))}\r\n        // </div>\r\n    )\r\n}\r\n\r\nfunction AuthForm(props) {\r\n    const { submitting } = props\r\n    const classes = useStyles();\r\n\r\n    return <form onSubmit={props.handleSubmit} className={classes.input}\r\n    >\r\n        <Field\r\n            name=\"email\"\r\n            type=\"email\"\r\n            component={input}\r\n            label=\"Email\"\r\n            validate={[required, email]}\r\n            warn={aol}\r\n        />\r\n\r\n        <Field\r\n            name=\"password\"\r\n            type=\"password\"\r\n            component={input}\r\n            label=\"Пароль\"\r\n            validate={[required, minLength6]}\r\n            warn={aol}\r\n        />\r\n        <div style={{ margin: '22px 0 10px 8px' }}>\r\n            <Button type=\"submit\" disabled={submitting} variant=\"contained\" style={{ marginRight: '8px' }}>Войти</Button>\r\n            <Button variant=\"contained\">\r\n                <NavLink to='/register'>Зарегистрироваться</NavLink>\r\n            </Button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nAuthForm = reduxForm({ form: 'auth' })(AuthForm)\r\n\r\nfunction Auth(props) {\r\n    const classes = useStyles();\r\n    let submit = async (formData) => {\r\n        try {\r\n            let req = await axios.post('http://localhost:8001/login', { ...formData })\r\n            debugger\r\n            props.setProfile(\r\n                req.data.token, \r\n                req.data.userId,\r\n                req.data.name,\r\n                req.data.email,\r\n                req.data.contacts,\r\n                req.data.messages,\r\n                req.data.invites,\r\n                req.data.groups\r\n            )\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    Вход\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <AuthForm onSubmit={submit} />\r\n\r\n        </Card>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setProfile,setLoaded })(withRouter(Auth));\r\n","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Header\\Header.jsx",[],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\Chats.jsx",["256","257"],"import { NavLink } from 'react-router-dom';\r\nimport './Chats.css';\r\n\r\nfunction Chats() {\r\n    let contacts=true;\r\n\r\n    return <div className='im_dialogs_col_wrap noselect'>\r\n        <div className='im_dialogs_panel'>\r\n            <div className='im_dialogs_search'>\r\n                <input className=\"form-control im_dialogs_search_field no_outline ng-valid ng-dirty ng-touched ng-empty\"></input>\r\n                <a className=''>\r\n                    <i className=''></i>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div className='im_dialogs_col' style={{height:'100vh'}}>\r\n            <div className='im_dialogs_wrap nano has-scrollbar active-scrollbar'>\r\n                <div className='im_dialogs_scrollable_wrap nano-content' style={{right:'-17px'}}>\r\n                    {contacts ? <NavLink to='/users'>Добавить</NavLink>\r\n                    :<ul className='nav nav-pills nav-stacked'>\r\n                        <li className='im_dialog_wrap'> \r\n                            <a className='im_dialog'>\r\n                                <div className='im_dialog_meta pull-right text-right'>\r\n                                    <div className='im_dialog_date'>\r\n                                        12:31 AM\r\n                                    </div>\r\n                                    <span className='im_dialog_badge badge im_dialog_badge_muted'>\r\n                                        1\r\n                                    </span>\r\n                                </div>\r\n                                <div className='im_dialog_photo pull-left peer_photo_init'>\r\n                                    <span className='peer_initials nocopy im_dialog_photo user_bgcolor_5'>\r\n                                        PM\r\n                                    </span>\r\n                                </div>\r\n                                <div className='im_dialog_message_wrap'>\r\n                                    <div className='im_dialog_peer'>\r\n                                        <span className=''>\r\n                                            Влад\r\n                                        </span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div className=\"im_dialog_message\">\r\n                                            <span>\r\n                                                <span>\r\n                                                    <span className='im_dialog_chat_from_wrap'>\r\n                                                        <span className='im_dialog_chat_from'>\r\n                                                            Вадим\r\n                                                        </span>\r\n                                                        <span>\r\n                                                            :\r\n                                                        </span>\r\n                                                    </span>\r\n                                                </span>\r\n                                            </span>\r\n                                            <span >\r\n                                                <span className='im_short_message_text'>\r\n                                                а, да это просто задание такое))\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        </li>\r\n                    </ul>}\r\n                </div>\r\n                <div className='nano-pane' style={{display: 'block'}}>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Chats;","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Chat\\Chat.jsx",["258","259"],"import './Chat.css';\r\n\r\nfunction Chat() {\r\n    let chosen = true;\r\n    \r\n    return <div className='im_history_col_wrap noselect im_history_loaded'>\r\n        {!chosen ? <div className='im_history_not_selected_wrap'>\r\n            <div className='im_history_not_selected vertical-aligned' style={{ paddingTop: '229px', paddingBottom: '229px' }}>\r\n                Выберите чат для общения\r\n            </div>\r\n        </div>\r\n            : <div className='im_history_selected_wrap'>\r\n                <div className=\"im_history_wrap nano has-scrollbar active-scrollbar\" style={{ height: '481px' }}>\r\n                    <div className='im_history_scrollable_wrap nano-content' style={{ marginRight: '-17px' }}>\r\n                        <div className=''>\r\n                            <div className='im_history im_history_selectable'>\r\n                                <div classNmae=\"im_history_messages im_history_messages_group\">\r\n                                    {/* Loading More */}\r\n                                    <div className='im_history_messages_peer'>\r\n                                        {/* Сообщения */}\r\n                                        <div className='im_history_message_wrap'>\r\n                                            {/* Дата */}\r\n                                            <div class=\"im_message_outer_wrap hasselect\">\r\n\r\n                                                <div class=\"im_message_wrap clearfix\" >\r\n\r\n                                                    <div>\r\n                                                        <i class=\"icon icon-select-tick\"></i>\r\n\r\n                                                        <a class=\"im_message_from_photo pull-left peer_photo_init\"><span class=\"peer_initials nocopy im_message_from_photo user_bgcolor_5\"></span></a>\r\n\r\n                                                        <div class=\"im_message_meta pull-right text-right noselect\">\r\n\r\n                                                            <span class=\"im_message_date clickable\">\r\n                                                                <span class=\"im_message_edited\"></span>\r\n                                                                <span class=\"im_message_date_text nocopy\"></span>\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                        <div class=\"im_message_body\">\r\n\r\n                                                            <span class=\"im_message_author_wrap\">\r\n                                                                <span class=\"copyonly\">[<span>7:08:03 PM</span>] </span><a class=\"im_message_author user_color_5\">Viacheslav Barkov</a><span class=\"copyonly\">:</span><span class=\"im_message_author_admin\" style={{display: 'none'}}></span>\r\n                                                            </span>\r\n\r\n                                                            <div my-message-body=\"historyMessage\">\r\n                                                                <div class=\"im_message_text\" dir=\"auto\">Всем добрый вечер. Немного спама.</div>\r\n                                                                {/* <div class=\"im_message_media\" style=\"display: none;\"></div>\r\n                                                                <div class=\"im_message_sign\" style=\"display: none;\"></div>\r\n                                                                <div class=\"im_message_keyboard\" style=\"display: none;\"></div> */}\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* Cообщение */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=''>\r\n\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Chat;","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\redux\\Store.js",["260"],"import authReduser from \"./authReduser\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport profileReduser from \"./profileReduser\";\r\n\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\nlet redusers= combineReducers({\r\n    auth: authReduser,\r\n    profile: profileReduser,\r\n    form: formReducer,\r\n});\r\n\r\nlet store=createStore(redusers);\r\n\r\nexport default store","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\redux\\authReduser.js",["261","262"],"const LOGIN = 'authReuser/LOGIN';\r\nconst LOGOUT = 'authReuser/LOGOUT';\r\nconst SET_LOADED = 'authReuser/SET-LOADED';\r\nconst SET_TOKEN = 'authReuser/SET-TOKEN';\r\nconst SET_USER_ID = 'authReuser/SET-LOADED';\r\nconst SET_LOGIN = 'authReuser/SET-LOGIN';\r\nconst SET_PROFILE_DATA = 'authReuser/SET_PROFILE_DATA';\r\n\r\nlet init = {\r\n    token: null,\r\n    id: null,\r\n    loaded: false,\r\n    isAuth: false,\r\n    login: () => { },\r\n    //Данные\r\n    name: null,\r\n    email: null,\r\n    contacts: null,\r\n    messages: null,\r\n    invites: null,\r\n    groups: null\r\n};\r\n\r\nconst authReduser = (state = init, action) => {\r\n    switch (action.type) {\r\n        // case LOGIN:\r\n        //     localStorage.setItem('userData', JSON.stringify({ userId: action.id, token: action.jwtToken }))\r\n        //     return { ...state, userId: action.id, token: action.jwtToken}\r\n        case LOGOUT:\r\n            localStorage.removeItem('userData')\r\n            return { ...state, token: null, userId: null }\r\n        case SET_LOADED:\r\n            return { ...state, loaded: action.loaded }\r\n        case SET_PROFILE_DATA:\r\n            localStorage.setItem('userData', JSON.stringify({ id: action.id, token: action.token }))\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                email: action.email,\r\n                contacts: action.contacts,\r\n                messages: action.messages,\r\n                invites: action.invites,\r\n                groups: action.groups,\r\n                token: action.token,\r\n                id:action.id\r\n            }\r\n        case SET_TOKEN:\r\n            return { ...state, token: action.token }\r\n        // case SET_USER_ID:\r\n        //     return { ...state, userId: action.userId }\r\n        case SET_LOGIN:\r\n            return { ...state, login: action.login }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setProfile = (token, id, name, email, contacts, messages, invites, groups) => (\r\n    { type: SET_PROFILE_DATA, token, id, name, email, contacts, messages, invites, groups }\r\n);\r\nexport const logout = () => ({ type: LOGOUT, });\r\nexport const setLoaded = (loaded) => ({ type: SET_LOADED, loaded });\r\nexport const setToken = (token) => ({ type: SET_TOKEN, token });\r\n// export const setUserId = (userId) => ({ type: SET_USER_ID, userId });\r\nexport const setLogin = (login) => ({ type: SET_LOGIN, login });\r\n\r\n\r\nexport default authReduser","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\API\\api.js",[],["263","264"],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\Main.jsx",[],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Auth\\Register.jsx",["265","266","267","268","269"],"import './Auth.module.css';\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport axios from 'axios';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { required, aol, email, minLength6 } from '../../validators'\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 340,\r\n        margin: '40px auto 0'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    input: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    }\r\n}));\r\n\r\nconst input = ({ input, label, type, name, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <div>\r\n            <TextField\r\n                //error\r\n                id=\"standard-error-helper-text\"\r\n                //label=\"Error\"\r\n                label={label}\r\n                type={type}\r\n                {...input}\r\n            // helperText={touched &&\r\n            //     ((error && { error }) ||\r\n            //         (warning && { warning }))}\r\n            />\r\n        </div>\r\n        // <div className=\"cf\">\r\n        //     <label for={name}>{label}<span className=\"required\">*</span></label>\r\n        //     <input {...input} name={name} type={type} id={name} size=\"35\" />\r\n        //     {touched &&\r\n        //         ((error && <span>{error}</span>) ||\r\n        //             (warning && <span>{warning}</span>))}\r\n        // </div>\r\n    )\r\n}\r\n\r\nfunction RegisterForm(props) {\r\n    const { submitting } = props\r\n    const classes = useStyles();\r\n\r\n    return <form onSubmit={props.handleSubmit} className={classes.input}>\r\n        <Field\r\n            name=\"name\"\r\n            type=\"text\"\r\n            component={input}\r\n            label=\"Имя\"\r\n            validate={[required]}\r\n            warn={aol}\r\n        />\r\n        <Field\r\n            name=\"email\"\r\n            type=\"email\"\r\n            component={input}\r\n            label=\"Email\"\r\n            validate={[required, email]}\r\n            warn={aol}\r\n        />\r\n\r\n        <Field\r\n            name=\"password\"\r\n            type=\"password\"\r\n            component={input}\r\n            label=\"Пароль\"\r\n            validate={[required, minLength6]}\r\n            warn={aol}\r\n        />\r\n        <div style={{ margin: '22px 0 10px 8px' }}>\r\n            <Button type=\"submit\" disabled={submitting} variant=\"contained\" style={{ marginRight: '8px' }}>Зарегистрироваться</Button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nRegisterForm = reduxForm({ form: 'register' })(RegisterForm)\r\n\r\nfunction Register(props) {\r\n    const classes = useStyles();\r\n    let submit = async (formData) => {\r\n        try {\r\n            debugger\r\n            let req = await axios.post('http://localhost:8001/register', { ...formData })\r\n            props.history.goBack()\r\n        } catch (e) { }\r\n    }\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    Вход\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <RegisterForm onSubmit={submit} />\r\n\r\n        </Card>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(withRouter(Register));","E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\validators.js",[],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Users\\Users.jsx",[],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Users\\UsersList.jsx",[],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\redux\\profileReduser.js",[],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Preloader\\Preloader.jsx",[],"E:\\Web\\React\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\ChatsContainer.jsx",["270"],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\index.js",["271"],["272","273"],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\App.js",["274","275","276","277","278","279","280","281","282","283","284","285","286"],"import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter} from 'react-router-dom';\nimport './App.css';\nimport { useRotes } from './HOC/routes';\nimport { setProfile, setLogin, setLoaded, setToken } from './redux/authReduser'\nimport { io } from \"socket.io-client\";\nimport { setOnlineGroupUsers, deleteOnlineGroupUsers } from './redux/groupsReduser'\nimport { pushMessage } from './redux/messagesReduser'\nexport const socket = io('http://localhost:8001', { autoConnect: false });\n\nfunction App(props) {\n  socket.on('test comand', data => {\n    console.log(\"connected: \" + JSON.stringify(data))\n  })\n  let [token, setToken] = useState(props.token)\n  let [users, setUsers] = useState([])\n  let usersArr = ['User1', 'User2', 'User3'];\n  useEffect(async () => {\n    const data = JSON.parse(localStorage.getItem('userData'))\n    let req;\n    if (data && data.token) {\n      req = await axios.get('http://localhost:8001/users/' + data.id)\n      props.setProfile(data.token, data.id,\n        req.data.name,\n        req.data.email,\n      )\n      socket.auth = { username: req.data.name };\n      socket.connect();\n\n      await socket.emit('userId', req.data.name)\n\n      socket.on('users in groups', (users) => {\n        console.log('Пользователи со всех групп онлайн:', users)\n        for (let user of users) {\n\n          socket.emit(\"private message\", {\n            content: 'ffff',\n            to: user.userID,\n          });\n          // console.log('сообщение отправлено к ', user.username)\n\n        }\n      })\n\n      socket.on(\"private message\", ({ content, from }) => {\n        console.log(from, ' connected')\n        let selectedChanel = window.selectedChanel\n        if (selectedChanel) {\n          if (selectedChanel.author.name === from.username) {\n            props.setOnlineGroupUsers([from])\n            console.log(props.onlineGroupUsers)\n          }\n          if (\n            !selectedChanel.canSee.prevelegion && selectedChanel.canSee.list.includes(from.username)\n            || selectedChanel.canSee.whitelisted && selectedChanel.canSee.list.includes(from.username)\n            || !selectedChanel.canSee.whitelisted && !selectedChanel.canSee.list.includes(from.username)\n          ) {\n            // for (let partner of selectedChanel.canSee.list) {\n            //   if (partner === from.username) {\n                props.setOnlineGroupUsers([from])\n                console.log(props.onlineGroupUsers)\n            //   }\n            // }\n          }\n\n        }\n      });\n      socket.on('send message to all', message => {\n        console.log(message)\n        props.pushMessage(message.content.message)\n      })\n      socket.on(\"dis\", (data) => {\n        console.log(data, 'has been disconnected')\n        props.deleteOnlineGroupUsers(data)\n\n      });\n      // await socket.on(\"user connected\",\n      //   (data) => {\n      //     console.log(data.from)\n      //     console.log(data.groups)\n      //   })\n      // socket.on(\"users\", (users) => {\n      //   users.forEach((user) => {\n      //     user.self = user.userID === socket.id;\n      //     console.log(user);\n      //   });\n      //   // put the current user first, and then sort by username\n      //   users=users.sort((a, b) => {\n      //     if (a.username < b.username) return -1;\n      //     return a.username > b.username ? 1 : 0;\n      //   })\n      //   console.log(users)\n      //   for (let user of usersArr){\n      //     for(let socketUser of users){\n      //       if (user==socketUser.username){\n      //         socket.emit(\"private message\", {\n      //           content:'aaaaaaaaaaaaa',\n      //           to: socketUser.userID,\n      //         });\n      //         console.log('сообщение отправлено к ',socketUser.username)\n      //         socket.on(\"private message\", ({ content, from }) => {\n      //           console.log(content,' от ', from)\n      //         });\n      //       }\n      //     }\n      //   }\n\n      // });\n      // socket.on(\"user connected\", (user) => {\n      //   console.log(user,'conected');\n      //   setUsers(users.push(user))\n      // });\n\n    }\n  }, []);\n\n  // useEffect(()=>{\n  //   setToken(props.token)\n  // },[props.token])\n  let routes = useRotes(!!props.token)\n  // if (!props.loaded) return <Preloader/>\n  return <div>\n    <BrowserRouter>\n      {/* {isAuth && <Navbar/>} */}\n      <div className='container'>\n        {routes}\n      </div>\n    </BrowserRouter>\n  </div>\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    loaded: state.auth.loaded,\n    token: state.auth.token,\n    userId: state.auth.userId,\n    selectedGroup: state.groups.selectedGroup,\n    onlineGroupUsers: state.groups.onlineGroupUsers,\n  }\n}\n\nexport default connect(mapStateToProps, { setProfile, setLogin, setLoaded, setToken, setOnlineGroupUsers, deleteOnlineGroupUsers,pushMessage })(App);\n // const login = useCallback(( token, id, name, email, contacts, messages, invites, groups) => {\n  //   props.setProfile(token, id, name, email, contacts, messages, invites, groups)\n  //   localStorage.setItem('userData', JSON.stringify({ id: id, token: token }))\n  // }, []);\n\n  // props.setLogin(login)\n\n  // useEffect(async () => {\n  //   const data = JSON.parse(localStorage.getItem('userData'))\n  //   debugger\n  //   if (data && data.token) {\n  //     let req = await axios.get('http://localhost:8001/profile/'+data.id)\n  //     login(data.token, data.userId,\n  //       req.data.name,\n  //       req.data.email,\n  //       req.data.contacts,\n  //       req.data.messages,\n  //       req.data.invites,\n  //       req.data.groups\n  //     )\n  //   }\n  //   props.setLoaded(true)\n  //   debugger\n  // }, [login]);\n\n  // let routes = useRotes(!!props.token)\n  // console.log(props.loaded)\n  // debugger","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\redux\\Store.js",[],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\redux\\authReduser.js",["287","288"],"const LOGIN = 'authReuser/LOGIN';\nconst LOGOUT = 'authReuser/LOGOUT';\nconst SET_LOADED = 'authReuser/SET-LOADED';\nconst SET_TOKEN = 'authReuser/SET-TOKEN';\nconst SET_USER_ID = 'authReuser/SET-LOADED';\nconst SET_LOGIN = 'authReuser/SET-LOGIN';\nconst SET_PROFILE_DATA = 'authReuser/SET_PROFILE_DATA';\n\nlet init = {\n    token: null,\n    id: null,\n    loaded: false,\n    isAuth: false,\n    login: () => { },\n    //Данные\n    name: null,\n    email: null,\n    contacts: null,\n    messages: null,\n    invites: null,\n    groups: null\n};\n\nconst authReduser = (state = init, action) => {\n    switch (action.type) {\n        // case LOGIN:\n        //     localStorage.setItem('userData', JSON.stringify({ userId: action.id, token: action.jwtToken }))\n        //     return { ...state, userId: action.id, token: action.jwtToken}\n        case LOGOUT:\n            localStorage.removeItem('userData')\n            return { ...state, token: null, userId: null }\n        case SET_LOADED:\n            return { ...state, loaded: action.loaded }\n        case SET_PROFILE_DATA:\n            localStorage.setItem('userData', JSON.stringify({ id: action.id, token: action.token }))\n            return {\n                ...state,\n                name: action.name,\n                email: action.email,\n                contacts: action.contacts,\n                messages: action.messages,\n                invites: action.invites,\n                groups: action.groups,\n                token: action.token,\n                id:action.id\n            }\n        case SET_TOKEN:\n            return { ...state, token: action.token }\n        // case SET_USER_ID:\n        //     return { ...state, userId: action.userId }\n        case SET_LOGIN:\n            return { ...state, login: action.login }\n        default:\n            return state\n    }\n}\nexport const setProfile = (token, id, name, email, contacts, messages, invites, groups) => (\n    { type: SET_PROFILE_DATA, token, id, name, email, contacts, messages, invites, groups }\n);\nexport const logout = () => ({ type: LOGOUT, });\nexport const setLoaded = (loaded) => ({ type: SET_LOADED, loaded });\nexport const setToken = (token) => ({ type: SET_TOKEN, token });\n// export const setUserId = (userId) => ({ type: SET_USER_ID, userId });\nexport const setLogin = (login) => ({ type: SET_LOGIN, login });\n\n\nexport default authReduser","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\redux\\profileReduser.js",[],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\HOC\\routes.jsx",["289"],"import React from 'react'\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport Auth from '../Components/Auth/Auth'\nimport Register from '../Components/Auth/Register'\nimport Main from '../Components/Main/Main'\nimport Users from '../Components/Users/Users'\nimport Preloader from '../Components/Preloader/Preloader';\n// import CreateGroup from '../Components/Create/CreateGroup'\n\nexport const useRotes=(isAuth)=>{\n if (isAuth){\n    return (<Switch>\n        <Route path='/chat/:groupId?/:chanelId?' exact>\n            <Main/>\n        </Route>\n        <Route path='/users' exact>\n            <Users/>\n        </Route>\n        <Route path='/create_group' exact>\n        <Main/>\n        </Route>\n        <Route path='/create_chanel' exact>\n        <Main/>\n        </Route>\n        <Redirect to='/chat/:groupId?/:chanelId?'/>\n    </Switch>)\n }\n\n return <Switch>\n     <Route path='/' exact>\n        <Auth/>\n     </Route>\n     <Route path='/register' exact>\n        <Register/>\n     </Route>\n     <Redirect to='/'/>\n </Switch>\n\n}\n// let mapStateToProps = (state) => {\n//     return {\n//       loaded: state.auth.loaded,\n//     }\n//   }\n  \n//   export default connect(mapStateToProps, { setLoaded })(useRotes);","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\Main.jsx",["290","291","292","293","294","295","296"],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Preloader\\Preloader.jsx",[],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Auth\\Register.jsx",["297","298","299","300","301"],"import './Auth.module.css';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport axios from 'axios';\nimport { Field, reduxForm } from 'redux-form'\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { required, aol, email, minLength6 } from '../../validators'\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 340,\n        margin: '40px auto 0'\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    input: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: 200,\n        },\n    }\n}));\n\nconst input = ({ input, label, type, name, meta: { touched, error, warning } }) => {\n    return (\n        <div>\n            <TextField\n                //error\n                id=\"standard-error-helper-text\"\n                //label=\"Error\"\n                label={label}\n                type={type}\n                {...input}\n            // helperText={touched &&\n            //     ((error && { error }) ||\n            //         (warning && { warning }))}\n            />\n        </div>\n        // <div className=\"cf\">\n        //     <label for={name}>{label}<span className=\"required\">*</span></label>\n        //     <input {...input} name={name} type={type} id={name} size=\"35\" />\n        //     {touched &&\n        //         ((error && <span>{error}</span>) ||\n        //             (warning && <span>{warning}</span>))}\n        // </div>\n    )\n}\n\nfunction RegisterForm(props) {\n    const { submitting } = props\n    const classes = useStyles();\n\n    return <form onSubmit={props.handleSubmit} className={classes.input}>\n        <Field\n            name=\"name\"\n            type=\"text\"\n            component={input}\n            label=\"Имя\"\n            validate={[required]}\n            warn={aol}\n        />\n        <Field\n            name=\"email\"\n            type=\"email\"\n            component={input}\n            label=\"Email\"\n            validate={[required, email]}\n            warn={aol}\n        />\n\n        <Field\n            name=\"password\"\n            type=\"password\"\n            component={input}\n            label=\"Пароль\"\n            validate={[required, minLength6]}\n            warn={aol}\n        />\n        <div style={{ margin: '22px 0 10px 8px' }}>\n            <Button type=\"submit\" disabled={submitting} variant=\"contained\" style={{ marginRight: '8px' }}>Зарегистрироваться</Button>\n        </div>\n    </form>\n}\n\nRegisterForm = reduxForm({ form: 'register' })(RegisterForm)\n\nfunction Register(props) {\n    const classes = useStyles();\n    let submit = async (formData) => {\n        try {\n            debugger\n            let req = await axios.post('http://localhost:8001/register', { ...formData })\n            props.history.goBack()\n        } catch (e) { }\n    }\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                   Регистрация\n                </Typography>\n            </CardContent>\n\n            <RegisterForm onSubmit={submit} />\n\n        </Card>\n    );\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        login: state.auth.login,\n    }\n}\n\nexport default connect(mapStateToProps, {})(withRouter(Register));","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Auth\\Auth.jsx",["302","303","304"],"import './Auth.module.css';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { setProfile,setLoaded } from '../../redux/authReduser'\nimport axios from 'axios';\nimport { Field, reduxForm } from 'redux-form'\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { required, aol, email, minLength6 } from '../../validators'\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 340,\n        margin: '40px auto 0'\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    input: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: 200,\n        },\n    }\n}));\n\nconst input = ({ input, label, type, name, meta: { touched, error, warning } }) => {\n    return (\n        <div>\n            <TextField\n                //error\n                id=\"standard-error-helper-text\"\n                //label=\"Error\"\n                label={label}\n                type={type}\n                {...input}\n            // helperText={touched &&\n            //     ((error && { error }) ||\n            //         (warning && { warning }))}\n            />\n        </div>\n        // <div className=\"cf\">\n        //     <label for={name}>{label}<span className=\"required\">*</span></label>\n        //     <input {...input} name={name} type={type} id={name} size=\"35\" />\n        //     {touched &&\n        //         ((error && <span>{error}</span>) ||\n        //             (warning && <span>{warning}</span>))}\n        // </div>\n    )\n}\n\nfunction AuthForm(props) {\n    const { submitting } = props\n    const classes = useStyles();\n\n    return <form onSubmit={props.handleSubmit} className={classes.input}\n    >\n        <Field\n            name=\"email\"\n            type=\"email\"\n            component={input}\n            label=\"Email\"\n            validate={[required, email]}\n            warn={aol}\n        />\n\n        <Field\n            name=\"password\"\n            type=\"password\"\n            component={input}\n            label=\"Пароль\"\n            validate={[required, minLength6]}\n            warn={aol}\n        />\n        <div style={{ margin: '22px 0 10px 8px' }}>\n            <Button type=\"submit\" disabled={submitting} variant=\"contained\" style={{ marginRight: '8px' }}>Войти</Button>\n            <Button variant=\"contained\">\n                <NavLink to='/register'>Зарегистрироваться</NavLink>\n            </Button>\n        </div>\n    </form>\n}\n\nAuthForm = reduxForm({ form: 'auth' })(AuthForm)\n\nfunction Auth(props) {\n    const classes = useStyles();\n    let submit = async (formData) => {\n        try {\n            let req = await axios.post('http://localhost:8001/login', { ...formData })\n            debugger\n            props.setProfile(\n                req.data.token, \n                req.data.userId,\n                req.data.name,\n                req.data.email,\n                req.data.contacts,\n                req.data.messages,\n                req.data.invites,\n                req.data.groups\n            )\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                    Вход\n                </Typography>\n            </CardContent>\n\n            <AuthForm onSubmit={submit} />\n\n        </Card>\n    );\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        login: state.auth.login,\n    }\n}\n\nexport default connect(mapStateToProps, { setProfile,setLoaded })(withRouter(Auth));\n","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\validators.js",[],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Users\\Users.jsx",["305"],"import { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport Chats from '../Chats/Chats';\nimport Header from '../Header/Header';\nimport './Users.css';\nimport UsersList from './UsersList';\nimport {\n    setSearched, toggleList, loadList, setReqNumber, setSearchedArr, SearchChange,\n    searchThunk,\n    CloseListThunk\n  } from '../../redux/searchReduser';\n\nfunction Users(props) {\n\n    return <div>\n    <div className='Header'>\n        <Header />\n    </div>\n    <div className='im_page_wrap clearfix'>\n        <div className='im_page_split clearfix'>\n            {/* <Chats/> */}\n            <UsersList {...props}/>\n        </div>\n    </div>\n</div>\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        author: state.auth.id,\n        rightsSetingForm: state.groups.rightsSetingForm,\n        selectedGroup: state.groups.selectedGroup,\n        selectedChanel: state.groups.selectedChanel,\n        groupForm: state.groups.groupForm,\n        newSearchText: state.search.newSearchText,\n        searched: state.search.searched,\n        isClosed: state.search.isClosed,\n        isListLoading: state.search.isListLoading,\n        requestNumber: state.search.requestNumber,\n    }\n}\nexport default connect(mapStateToProps, {\n    setSearched, toggleList, loadList, setReqNumber, setSearchedArr, SearchChange,\n    searchThunk,\n    CloseListThunk  })(withRouter(Users));","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\ChatsContainer.jsx",["306","307","308","309"],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Header\\Header.jsx",[],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chat\\Chat.jsx",["310","311","312","313","314"],"import './Chat.css';\nimport { io } from \"socket.io-client\";\nimport { socket } from '../../App';\nimport Preloader from '../Preloader/Preloader';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nfunction Chat(props) {\n    debugger\n    console.log(props.onlineGroupUsers)\n    let [text, setText] = useState('');\n    let rights = props.selectedChanel.rights;\n    // let  [messages, setMessages]=useState(props.messages);\n    // useEffect(()=>{\n    //     setMessages(props.messages)\n    // },[props.messages])\n    let sendMessage = async () => {\n        let message = await axios.post('http://localhost:8001/messages', {\n            text,\n            user: props.author,\n            chat: props.selectedChanel,\n            // onlineGroupUsers: props.onlineGroupUsers\n        })\n        props.pushMessage(message.data)\n        for (let user of props.onlineGroupUsers) {\n\n            socket.emit(\"send message\", {\n                content: {\n                    chanel:props.selectedChanel,\n                    group:props.selectedGroup,\n                    message:message.data\n                },\n                to: user.userID,\n            });\n        }\n        // socket.on(\"chat message\", ({ content, from }) => {\n        //     console.log(content, from)\n        // });\n\n    };\n    return <div className='im_history_col_wrap noselect im_history_loaded'>\n        {!props.selected ? <div className='im_history_not_selected_wrap'>\n            <div className='im_history_not_selected vertical-aligned' style={{ paddingTop: '229px', paddingBottom: '229px' }}>\n                Выберите чат для общения\n            </div>\n        </div>\n            : <div className='im_history_selected_wrap'>\n                <div className=\"im_history_wrap nano has-scrollbar active-scrollbar\" style={{ height: '370px' }}>\n                    <div className='im_history_scrollable_wrap nano-content' style={{ marginRight: '-17px' }}>\n                        <div className=''>\n                            <div className='im_history im_history_selectable'>\n                                <div classNmae=\"im_history_messages im_history_messages_group\">\n                                    {/* Loading More */}\n                                    <div className='im_history_messages_peer'>\n                                        {/* Сообщения */}\n                                        <div className='im_history_message_wrap'>\n                                            {/* Дата */}\n                                            <div class=\"im_message_outer_wrap hasselect\">\n\n                                                <div class=\"im_message_wrap clearfix\" >\n\n                                                    <div>\n                                                        <i class=\"icon icon-select-tick\"></i>\n\n                                                        <a class=\"im_message_from_photo pull-left peer_photo_init\"><span class=\"peer_initials nocopy im_message_from_photo user_bgcolor_5\"></span></a>\n\n                                                        <div class=\"im_message_meta pull-right text-right noselect\">\n\n                                                            <span class=\"im_message_date clickable\">\n                                                                <span class=\"im_message_edited\"></span>\n                                                                <span class=\"im_message_date_text nocopy\"></span>\n                                                            </span>\n                                                        </div>\n                                                        <div>\n                                                            {!props.selectedChanel\n                                                                ? <Preloader />\n                                                                : props.selectedChanel.name\n                                                            }\n                                                        </div>\n                                                        {props.messages.map(item => <div class=\"im_message_body\">\n\n                                                            <span class=\"im_message_author_wrap\">\n                                                                <span class=\"copyonly\">[<span>{item.createdAt}</span>] </span><a class=\"im_message_author user_color_5\">{item.user.name}</a><span class=\"copyonly\">:</span><span class=\"im_message_author_admin\" style={{ display: 'none' }}></span>\n                                                            </span>\n\n                                                            <div my-message-body=\"historyMessage\">\n                                                                <div class=\"im_message_text\" dir=\"auto\">{item.text}</div>\n                                                                {/* <div class=\"im_message_media\" style=\"display: none;\"></div>\n                                                                <div class=\"im_message_sign\" style=\"display: none;\"></div>\n                                                                <div class=\"im_message_keyboard\" style=\"display: none;\"></div> */}\n                                                            </div>\n\n                                                        </div>)}\n\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                        {/* Cообщение */}\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div className=''>\n\n                    </div>\n                </div>\n                <div className=''>\n                    {/* {Acces(rights.canWrite) ? */}<div> \n                        <button onClick={sendMessage}>Отправить</button>\n                        <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\"\n                            value={text}\n                            onChange={(e) => { setText(e.target.value) }}></textarea>\n                    </div>\n                    {/* :<div>У вас отключена возможность писать в этом чате</div>} */}\n                </div>\n            </div>\n        }\n    </div>\n}\n\nexport default Chat;","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\Chats.jsx",["315","316","317","318","319","320","321"],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Users\\UsersList.jsx",["322","323","324","325"],"import { AppBar, Box, makeStyles, Tab, Tabs, Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Preloader from '../Preloader/Preloader';\nimport './Users.css';\nimport PropTypes from 'prop-types';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\n\nfunction UsersList(props) {\n\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    let [usersList, setUsersList] = useState(null);\n    let [searched, setSearched] = useState(props.searched);\n\n    let searchInput = React.createRef();\n    useEffect(async () => {\n        let req = await axios.get('http://localhost:8001/friends/' + props.author)\n        setUsersList(req.data)\n    }, [])\n\n    useEffect(() => {\n        if (searched.requestNumber < props.searched.requestNumber || props.searched.requestNumber === 0)\n            setSearched(props.searched)\n    }, [props.searched])\n    let makeInvite = async (partner) => {\n        await axios.post('http://localhost:8001/make_invite', {\n            initiator: props.author,\n            partner,\n        })\n    }\n    let stopWait=async(inviteId,answer)=>{\n        await axios.put('http://localhost:8001/frendship/'+ inviteId, {\n            waiting: answer,\n        })\n    }\n    return <div style={{ height: '100vh' }}>\n        <form action=\"#\" className='searching-form'>\n            <h3>Найти и отправить инвайт</h3>\n            <input className=\"text-search\" type=\"text\" value={props.newSearchText}\n                onChange={() => { props.searchThunk(searchInput.current.value, props.requestNumber,props.author) }}\n                ref={searchInput}\n                name=\"s\"\n                placeholder=\"Искать здесь...\" />\n            {\n                props.newSearchText !== ''\n                    ? <NavLink to={\"/search/\" + props.newSearchText} onClick={() => {\n                        props.CloseListThunk()\n                        props.SearchChange('')\n                    }}>\n                        <input type=\"submit\" className=\"submit-search\" value=\"\" />\n                    </NavLink>\n                    : <input type=\"submit\" disabled='true' className=\"submit-search\" value=\"\" />\n            }\n            {props.isListLoading ? <div className='preloader'>\n                <Preloader />\n            </div>\n                :\n                <ul className=\"collection\">\n                    {\n                        (props.isClosed && !searched.request) ? null :\n                            searched.request.map((item) => {\n\n                                return <li className=\"collection-item\"\n                                    onClick={() => {\n                                        makeInvite(item._id)\n                                        props.SearchChange('')\n                                        props.CloseListThunk()\n                                    }}>\n                                    {/* <NavLink to={`/post/${item.title}`} */}\n                                        {/* //className=\"collection-item\" */}\n                                       {/* > */}\n                                    {item.name}\n                                    {/* </NavLink> */}\n                                </li>\n                            })\n                    }\n                    {\n                        (!searched.request || searched.request.length === 0) ? null :\n                            <li className=\"collection-item\">\n                                <NavLink to={\"/search/\" + props.newSearchText} onClick={() => {\n                                    props.CloseListThunk()\n                                    props.SearchChange('')\n                                }}>\n                                    Все результаты\n              </NavLink>\n                            </li>\n                    }\n                </ul>\n            }\n        </form>\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Контакты\" {...a11yProps(0)} />\n                    <Tab label=\"Приглошения\" {...a11yProps(1)} />\n                    <Tab label=\"Ожидания\" {...a11yProps(2)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                {\n                    !usersList\n                        ? <Preloader />\n                        : usersList.friends.map(item => {\n                            if (item.initiator._id === props.author) {\n                                return <div>\n                                    {item.partner.name}\n                                </div>\n                            }\n                            if (item.partner._id === props.author) {\n                                return <div>\n                                    {item.initiator.name}\n                                </div>\n                            }\n                        })\n                }\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                {\n                    !usersList\n                        ? <Preloader />\n                        : usersList.invites.map(item =>\n                            <div>\n                                <div>\n                                {item.initiator.name}\n                                </div>\n                                <button onClick={()=>{stopWait(item._id,false)}}>Принять</button>\n                                <button \n                                // onClick={()=>{stopWait(item._id,false)}}\n                                >Пошел нахуй</button>\n                            </div>\n                        )\n                }\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n            {\n                    !usersList\n                        ? <Preloader />\n                        : usersList.waitings.map(item =>\n                            <div>\n                                {item.partner.name}\n                            </div>\n                        )\n                }\n      </TabPanel>\n        </div>\n    </div>\n}\n\nexport default UsersList","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\Search.jsx",["326"],"import './Chats.css';\r\n\r\nfunction Search() {\r\n\r\n    return  <div className='im_dialogs_panel'>\r\n            <div className='im_dialogs_search'>\r\n                <input className=\"form-control im_dialogs_search_field no_outline ng-valid ng-dirty ng-touched ng-empty\"></input>\r\n                <a className=''>\r\n                    <i className=''></i>\r\n                </a>\r\n            </div>\r\n        </div>\r\n}\r\n\r\nexport default Search;","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\SingleChat.jsx",["327","328","329"],"import { socket } from '../../App';\r\nimport { io } from \"socket.io-client\";\r\nimport './Chats.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction SingleChat(props) {\r\n    let selectChat = () => {\r\n    }\r\n    return <NavLink to={'/chat/'+props.groupId+'/'+props.chanel._id} activeClassName='active_chat' onClick={selectChat}>\r\n         <li className='im_dialog_wrap'>\r\n        <a className='im_dialog'>\r\n            <div className='im_dialog_meta pull-right text-right'>\r\n                <div className='im_dialog_date'>\r\n                    12:31 AM\r\n                                    </div>\r\n                <span className='im_dialog_badge badge im_dialog_badge_muted'>\r\n                    1\r\n                                    </span>\r\n            </div>\r\n            <div className='im_dialog_photo pull-left peer_photo_init'>\r\n                <span className='peer_initials nocopy im_dialog_photo user_bgcolor_5'>\r\n                    PM\r\n                                    </span>\r\n            </div>\r\n            <div className='im_dialog_message_wrap'>\r\n                <div className='im_dialog_peer'>\r\n                    <span className=''>\r\n                        {props.chanel.name}\r\n                    </span>\r\n                </div>\r\n                <div onClick={() => {\r\n                    props.setSelectedChanel(props.chanel)\r\n                    props.SetRightsForm('existing_chanel') \r\n                    }}>\r\n                    Настроить\r\n                </div>\r\n                <div>\r\n                    <div className=\"im_dialog_message\">\r\n                        {/* <span>\r\n                            <span>\r\n                                <span className='im_dialog_chat_from_wrap'>\r\n                                    <span className='im_dialog_chat_from'>\r\n                                        Вадим\r\n                                                        </span>\r\n                                    <span>\r\n                                        :\r\n                                                        </span>\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n                        <span >\r\n                            <span className='im_short_message_text'>\r\n                                а, да это просто задание такое))\r\n                                                </span>\r\n                        </span> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    </li>\r\n    </NavLink>\r\n}\r\n\r\nexport default SingleChat;","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\redux\\groupsReduser.js",["330"],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\redux\\messagesReduser.js",[],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chat\\ChatContainer.jsx",["331","332"],"import Chat from './Chat';\nimport { connect } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { setMessages,pushMessage } from '../../redux/messagesReduser'\nimport { setSelectedGroup, setSelected, setOnlineGroupUsers, setSelectedChanel } from '../../redux/groupsReduser'\nimport { withRouter } from 'react-router';\nimport { socket } from '../../App';\nfunction ChatContainer(props) {\n\n    // let Acces = (right) => {\n    //     let inList;\n    //     inList = right.list.some(item => item == props.name) || props.selectedGroup.author.name==props.name\n    //     debugger\n    //     if ((!right.whitelisted && inList) || (right.whitelisted && !inList)) return true\n    //     return false\n    // }\n    let [accesed, setAccesed] = useState(null);\n    useEffect(async () => {\n        let chanelId = props.match.params.chanelId;\n        if (chanelId) {\n            props.setSelected(true)\n            console.log(props.selected)\n            let ChatReq = await axios.get('http://localhost:8001/single_chanel/' + chanelId);\n            props.setSelectedChanel(ChatReq.data)\n            console.log('ChatReq.data', ChatReq.data)\n            // let a = Acces(ChatReq.data.canSee)\n            // setAccesed(Acces(ChatReq.data.canSee))\n            setAccesed(JSON.parse(localStorage.getItem('right_keys'))[ChatReq.data.name].canSee)\n\n            if (JSON.parse(localStorage.getItem('right_keys'))[ChatReq.data.name].canSee) {\n\n                !ChatReq.data.canSee.prevelegion\n                    ? socket.emit('selectChat', { users: ChatReq.data.canSee.list})\n                    : ChatReq.data.canSee.whitelisted\n                        ? socket.emit('selectChat', { users: ChatReq.data.canSee.list})\n                        : socket.emit('selectChat', {\n                            users: [props.selectedGroup.author.name,...props.selectedGroup.partners.filter(\n                                item => !ChatReq.data.canSee.list.some(list_item => list_item === item)\n                            )]\n                        })\n\n                socket.on(\"users\", (users) => {\n                    users.forEach((user) => {\n                        user.self = user.userID === socket.id;\n                        console.log(user);\n                    });\n                    props.setOnlineGroupUsers(users)\n                    console.log(props.onlineGroupUsers)\n                    console.log('Пользователи получены')\n\n                });\n                // socket.on(\"user connected\", (user) => {\n                //     console.log(user, 'conected');\n                //     props.setOnlineGroupUsers([user])\n                //     console.log(props.onlineGroupUsers)\n                // });\n                let MesReq = await axios.get('http://localhost:8001/messages/' + chanelId,\n                {\n                    headers: {\n                        'Right-Access': 'Access '+ JSON.parse(localStorage.getItem('right_keys'))[ChatReq.data.name].canSee\n                    }\n                });\n                props.setMessages(MesReq.data)\n            }\n        }\n    }, [props.match.params.chanelId])\n\n    if (!props.selectedChanel) {\n        return (\n            <div className='im_history_not_selected vertical-aligned' style={{ paddingTop: '229px', paddingBottom: '229px' }}>\n                Выберите чат для общения\n            </div>\n        )\n    }\n\n    if (props.selectedChanel && !accesed) return (\n        <div className='im_history_not_selected vertical-aligned' style={{ paddingTop: '229px', paddingBottom: '229px' }}>\n            Вы не можете посещать данный канал\n        </div>\n    )\n    return <Chat {...props} />\n}\nlet mapStateToProps = (state) => {\n    return {\n        author: state.auth.id,\n        name: state.auth.name,\n        selected: state.groups.selected,\n        selectedGroup: state.groups.selectedGroup,\n        messages: state.messages.messages,\n        onlineGroupUsers: state.groups.onlineGroupUsers,\n        selectedChanel: state.groups.selectedChanel,\n    }\n}\nexport default connect(mapStateToProps, { setMessages, setSelectedGroup, setSelected, setOnlineGroupUsers, setSelectedChanel,pushMessage })(withRouter(ChatContainer));","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\Groups.jsx",["333","334","335"],"import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport './Chats.css';\r\nimport { setGroups, SetRightsForm, setSelectedGroup, defineRole } from '../../redux/groupsReduser'\r\n\r\n\r\nfunction Groups(props) {\r\n    useEffect(async () => {\r\n        let req = await axios.get('http://localhost:8001/groups/' + props.name);\r\n        props.setGroups(req.data)\r\n    }, [])\r\n    // let [groups,setGroups]=useState(null);\r\n    return (\r\n        <div className='im_groups_col_wrap noselect'>\r\n            <div>Группы</div>\r\n            <ul className='nav nav-pills nav-stacked'>\r\n                {!props.groups ? <Preloader />\r\n                    : props.groups.map(item =>\r\n                        <NavLink\r\n                            to={\"/chat/\" + item._id}\r\n                            className=\"group_link\"\r\n                            activeClassName='active_chat'\r\n                        >\r\n                            <li className=\"group_item\"\r\n                                onClick={() => {\r\n                                    props.setSelectedGroup(item)\r\n                                }}>\r\n                                {item.name}\r\n                            </li>\r\n                        </NavLink>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        author: state.auth.id,\r\n        name: state.auth.name,\r\n        groups: state.groups.groups,\r\n        rights: state.groups.rights,\r\n        selectedGroup: state.groups.selectedGroup,\r\n        // rightsSetingForm: state.groups.rightsSetingForm\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setGroups, SetRightsForm, setSelectedGroup, defineRole })(Groups);","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\CreateChanel.jsx",["336","337","338","339","340","341"],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\RightsSetingForm.jsx",["342","343","344","345","346"],"\r\nimport { io } from \"socket.io-client\";\r\nimport { socket } from '../../App';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { SetRightsForm } from '../../redux/groupsReduser'\r\nimport { connect } from 'react-redux';\r\nimport SingleRightSettings from \"./SingleRightSettings\";\r\nfunction RightsSetingForm(props) {\r\n\r\n    let chanel;\r\n    //     if (props.rightsSetingForm==='new_chanel'){\r\n    //     let namesInGroups = [];\r\n    //     namesInGroups.push(props.selectedGroup.author.name)\r\n    //     for (let partner of props.selectedGroup.partners) {\r\n    //         namesInGroups.push(partner.name)\r\n    //     }\r\n    //     rights={\r\n    //         users: {\r\n    //             witelist:[...namesInGroups],\r\n    //             blacklist: null\r\n    //         },\r\n    //         canWrite: {\r\n    //             witelist:[...namesInGroups],\r\n    //             blacklist: null\r\n    //         },\r\n    //         canSeeHistory: {\r\n    //             witelist:[...namesInGroups],\r\n    //             blacklist: null\r\n    //         },\r\n    //         canSendFile: {\r\n    //             witelist:[...namesInGroups],\r\n    //             blacklist: null\r\n    //         },\r\n    //         canAddUsers: {\r\n    //             witelist:[namesInGroups[0]],\r\n    //             blacklist: null\r\n    //         },\r\n    //         canDeleteUsers: {\r\n    //             witelist:[namesInGroups[0]],\r\n    //             blacklist: null\r\n    //         },\r\n    //     }\r\n    // }\r\n    if (props.rightsSetingForm === 'existing_chanel') {\r\n        debugger\r\n        chanel = props.selectedChanel\r\n    }\r\n    return <div style={{ height: '100vh' }}>\r\n        <span onClick={() => { props.SetRightsForm(false) }}>Закрыть</span>\r\n        <h3>Права достуа</h3>\r\n        <ul>\r\n            <SingleRightSettings\r\n                title='Участники, которым разрешено посещать канал'\r\n                right={chanel.canSee}\r\n                group={props.selectedGroup}\r\n            />\r\n            <SingleRightSettings\r\n                title='Участники, которым отпровлять сообщения'\r\n                right={chanel.canWrite}\r\n                group={props.selectedGroup}\r\n            />\r\n            <SingleRightSettings\r\n                title='Участники, которым разрешено смотреть историю'\r\n                right={chanel.canSeeHistory}\r\n                group={props.selectedGroup}\r\n            />\r\n            <SingleRightSettings\r\n                title='Участники, которым разрешено отправлять файлы'\r\n                right={chanel.canSendFile}\r\n                group={props.selectedGroup}\r\n            />\r\n        </ul>\r\n    </div>\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        author: state.auth.id,\r\n        rightsSetingForm: state.groups.rightsSetingForm,\r\n        selectedGroup: state.groups.selectedGroup,\r\n        selectedChanel: state.groups.selectedChanel,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { SetRightsForm })(RightsSetingForm);","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\SingleRightSettings.jsx",["347","348","349","350","351","352"],"import axios from 'axios';\r\nimport SingleRightPopup from './SingleRightPopup';\r\n\r\nfunction SingleRightSettings(props) {\r\n    // let [list, setList] = useState([])\r\n    let arr = props.right.list;\r\n\r\n    let popup = (e) => {\r\n        if (e.target.className == 'button') e.target.parentNode.nextElementSibling.classList.add('overlay_target')\r\n        if (e.target.classList[0] == 'overlay' || e.target.className == 'close') e.target.closest('.overlay').classList.toggle('overlay_target')\r\n    }\r\n    let createList = (e, name) => {\r\n        if (arr.some(item => item === name)) {\r\n            arr.splice(arr.indexOf(name), 1)\r\n            // setList(list.splice(list.indexOf(name),1))\r\n            e.target.style.backgroundColor = ''\r\n            // e.target.classList.toggle('.chosen_item')\r\n        } else {\r\n            arr.push(name)\r\n            // setList([...list,name])\r\n            // e.target.classList.toggle('.chosen_item')\r\n            e.target.style.backgroundColor = 'blueviolet'\r\n        }\r\n        console.log(arr)\r\n    }\r\n    let sendList = (rightId, whitelisted) => {\r\n        if (!props.right.prevelegion) {\r\n            debugger\r\n            axios.put('http://localhost:8001/right/update/' + rightId, { list: arr, prevelegion: true, whitelisted })\r\n        } else {\r\n            axios.put('http://localhost:8001/right/update/' + rightId, { list: arr })\r\n        }\r\n    }\r\n    return <li className='right_item'>\r\n        <div>{props.title}</div>\r\n        {!props.right.prevelegion\r\n            ? <SingleRightPopup {...props}\r\n                WLtitle='Назначить пользователей'\r\n                BLtitle='Запретить пользователей' />\r\n            : props.right.whitelisted\r\n                ? <SingleRightPopup {...props}\r\n                    WLtitle='Именить белый список'\r\n                    BLtitle='Назначить черный список' />\r\n\r\n                : <SingleRightPopup {...props}\r\n                    WLtitle='Назначить белый список'\r\n                    BLtitle='Изменить черный список' />\r\n        }\r\n    </li>\r\n}\r\n\r\nexport default SingleRightSettings;","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\GroupSetingForm.jsx",["353","354"],"import { SetRightsForm } from '../../redux/groupsReduser'\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\n\r\nfunction GroupSetingForm(props) {\r\n    let [roled, setRoled] = useState(null)\r\n\r\n    useEffect(async () => {\r\n        let res = await axios.get('http://localhost:8001/roles_all/' + props.selectedGroup._id)\r\n        setRoled(res.data)\r\n    }, [])\r\n\r\n    let toggleMenu=(e)=>{\r\n        debugger\r\n        e.target.nextElementSibling.classList.toggle('open_menu')\r\n    }\r\n\r\n    let changeRole = async (name, role) => {\r\n        debugger\r\n        await axios.put('http://localhost:8001/roles_update/' + name + '/' + props.selectedGroup._id, { role })\r\n        let res = await axios.get('http://localhost:8001/roles_all/' + props.selectedGroup._id)\r\n        setRoled(res.data)\r\n    }\r\n    let deleteUser = async (name) => {\r\n        if(JSON.parse(localStorage.getItem('role')).role === 'admin'\r\n        ||JSON.parse(localStorage.getItem('role')).role === 'owner'){\r\n        await axios.delete('http://localhost:8001/group_delete_user/' + name + '/' + props.selectedGroup._id,\r\n        {\r\n            headers: {\r\n                'Role-Access': 'Access '+ JSON.parse(localStorage.getItem('role')).role_key\r\n            }\r\n        }\r\n        )\r\n        let res = await axios.get('http://localhost:8001/roles_all/' + props.selectedGroup._id)\r\n        setRoled(res.data)\r\n        }\r\n    }\r\n    return <div style={{ height: '100vh' }}>\r\n        <span onClick={() => { props.SetRightsForm(false) }}>Закрыть</span>\r\n        <h3>Роли</h3>\r\n        {!roled ? <Preloader /> : <div>\r\n            <h4>Администраторы</h4>\r\n            <ul className='role_list'>\r\n                {roled\r\n                    .filter(item => item.role === 'admin' || item.role === 'owner')\r\n                    .map(item => <li className='role_item'>\r\n                        <ContextMenuTrigger holdToDisplay={1} id=\"same_unique_identifier\">\r\n                            {item.user_name} - {item.role}\r\n                        </ContextMenuTrigger>\r\n\r\n                        <ContextMenu id=\"same_unique_identifier\">\r\n                            <MenuItem data={{ foo: 'bar' }} onClick={() => { console.log(';;;;;;;;') }}>\r\n                                Назначить модератором\r\n                        </MenuItem>\r\n                            <MenuItem data={{ foo: 'bar' }} >\r\n                                Назначить обычным пользователем\r\n                        </MenuItem>\r\n                            <MenuItem divider />\r\n                            <MenuItem data={{ foo: 'bar' }} >\r\n                                Удалить из Группы\r\n                        </MenuItem>\r\n                        </ContextMenu>\r\n                    </li>\r\n                    )}\r\n            </ul>\r\n            <h4>Модераторы</h4>\r\n            <ul className='role_list'>\r\n                {roled\r\n                    .filter(item => item.role === 'moderator')\r\n                    .map(item => <li className='role_item'>\r\n                        <ContextMenuTrigger holdToDisplay={1} id=\"same_unique_identifier\">\r\n                            {item.user_name}\r\n                        </ContextMenuTrigger>\r\n\r\n                        <ContextMenu id=\"same_unique_identifier\">\r\n                            <MenuItem data={{ foo: 'bar' }} onClick={() => { console.log(';;;;;;;;') }}>\r\n                                Назначить модератором\r\n                        </MenuItem>\r\n                            <MenuItem data={{ foo: 'bar' }} >\r\n                                Назначить обычным пользователем\r\n                        </MenuItem>\r\n                            <MenuItem divider />\r\n                            <MenuItem data={{ foo: 'bar' }} >\r\n                                Удалить из Группы\r\n                        </MenuItem>\r\n                        </ContextMenu>\r\n                    </li>\r\n                    )}\r\n            </ul>\r\n            <h4>Пользователи</h4>\r\n            <ul className='role_list'>\r\n                {roled\r\n                    .filter(item => item.role === 'partner' )\r\n                    .map(item => <li>\r\n                        <div className='role_item' \r\n                        onClick={(e)=>{toggleMenu(e)}}\r\n                        >\r\n                            {item.user_name}\r\n                        </div>\r\n\r\n\r\n                        <div className='react-contextmenu'>\r\n                            <div className='react-contextmenu-item'\r\n                            onClick={() => {changeRole(item.user_name, 'moderator')}}>\r\n                                Назначить модератором\r\n                                </div>\r\n\r\n                            <div className='react-contextmenu-item'>\r\n                                Назначить обычным пользователем\r\n                                </div>\r\n                            <div className='react-contextmenu-item'\r\n                            onClick={() => {deleteUser(item.user_name)}}>\r\n                                Удалить из Группы\r\n                                </div>\r\n                        </div>\r\n\r\n\r\n                    </li>\r\n                    )}\r\n            </ul>\r\n            <h4>Лист ожидания</h4>\r\n            <ul className='role_list'>\r\n                {roled\r\n                    .filter(item => item.role === 'invited')\r\n                    .map(item => <li className='role_item'>\r\n                        <ContextMenuTrigger holdToDisplay={1} id=\"same_unique_identifier\">\r\n                            {item.user_name}\r\n                        </ContextMenuTrigger>\r\n\r\n                        <ContextMenu id=\"same_unique_identifier\">\r\n                            <MenuItem data={{ foo: 'bar' }} onClick={() => { console.log(';;;;;;;;') }}>\r\n                                Назначить модератором\r\n                        </MenuItem>\r\n                            <MenuItem data={{ foo: 'bar' }} >\r\n                                Назначить обычным пользователем\r\n                        </MenuItem>\r\n                            <MenuItem divider />\r\n                            <MenuItem data={{ foo: 'bar' }} >\r\n                                Удалить из Группы\r\n                        </MenuItem>\r\n                        </ContextMenu>\r\n                    </li>\r\n                    )}\r\n            </ul>\r\n        </div>\r\n        }\r\n        {/* <SingleGroupSettings\r\n                title='Назначить администраоров'\r\n                role='admin'\r\n                userId={props.author}\r\n                name={props.name}\r\n                group={props.selectedGroup}\r\n                />\r\n                <SingleGroupSettings\r\n                title='Назначить модераторов'\r\n                role='moderator'\r\n                group={props.selectedGroup}\r\n                userId={props.author}\r\n                name={props.name}\r\n                />\r\n                <SingleGroupSettings\r\n                title='Назначить простым пользователем'\r\n                role='partner'\r\n                userId={props.author}\r\n                group={props.selectedGroup}\r\n                name={props.name}\r\n                /> */}\r\n\r\n    </div>\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        author: state.auth.id,\r\n        name: state.auth.name,\r\n        rightsSetingForm: state.groups.rightsSetingForm,\r\n        selectedGroup: state.groups.selectedGroup,\r\n        selectedChanel: state.groups.selectedChanel,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { SetRightsForm })(GroupSetingForm);","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\SingleGroupSettings.jsx",["355","356","357","358","359","360","361"],"import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction SingleGroupSettings(props) {\r\n    let [roled, setRoled] = useState(null)\r\n    let arr = []\r\n    useEffect(async () => {\r\n        let res = await axios.get('http://localhost:8001/roles/' + props.role + '/' + props.group._id)\r\n        setRoled(res.data)\r\n    }, [])\r\n    let popup = (e) => {\r\n        if (e.target.className == 'button') e.target.parentNode.nextElementSibling.classList.add('overlay_target')\r\n        if (e.target.classList[0] == 'overlay' || e.target.className == 'close') e.target.closest('.overlay').classList.toggle('overlay_target')\r\n    }\r\n    let createList = (e, name) => {\r\n        if (arr.some(item => item === name)) {\r\n            arr.splice(arr.indexOf(name), 1)\r\n            e.target.style.backgroundColor = ''\r\n        } else {\r\n\r\n            arr.push(name)\r\n            e.target.style.backgroundColor = 'blueviolet'\r\n        }\r\n        console.log(arr)\r\n    }\r\n    let sendList = (groupId) => {\r\n        debugger\r\n        axios.put('http://localhost:8001/group/update/' + props.role + '/' + groupId, { list: arr })\r\n    }\r\n    return <li className='right_item'>\r\n        <div>{props.title}</div>\r\n        <div className=''>\r\n            <div className='popup_wrapper' onClick={(e) => { popup(e) }}>\r\n                <div class=\"box\">\r\n                    <a class=\"button\">Назначить пользователей</a>\r\n                </div>\r\n\r\n                <div class=\"overlay\" >\r\n                    <div class=\"popup\">\r\n                        <h2>Назначить пользователей</h2>\r\n                        <a class=\"close\">&times;</a>\r\n                        <div class=\"content\">\r\n                            <ul className='user_list'>\r\n                                \r\n                                {!roled ? null :\r\n                                    roled.map(item =>\r\n                                        <li onClick={(e) => { createList(e, item) }}\r\n                                            className='user_item'>\r\n                                            {item.user_name}\r\n                                        </li>)\r\n                                }\r\n                            </ul>\r\n                            <button onClick={() => {\r\n                                sendList(props.group._id, true)\r\n                            }}>ОК</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </li>\r\n}\r\n\r\nexport default SingleGroupSettings;",["362","363"],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\AddUsersForm.jsx",["364","365","366","367","368","369"],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Main\\SingleRightPopup.jsx",["370","371","372","373","374","375","376","377","378"],"import axios from 'axios';\r\n\r\nfunction SingleRightPopup(props) {\r\n    // let [list, setList] = useState([])\r\n    let arr = props.right.list;\r\n\r\n    let popup = (e) => {\r\n        if (e.target.className == 'button') e.target.parentNode.nextElementSibling.classList.add('overlay_target')\r\n        if (e.target.classList[0] == 'overlay' || e.target.className == 'close') e.target.closest('.overlay').classList.toggle('overlay_target')\r\n    }\r\n    let createList = (e, name) => {\r\n        if (arr.some(item => item === name)) {\r\n            arr.splice(arr.indexOf(name), 1)\r\n            // setList(list.splice(list.indexOf(name),1))\r\n            e.target.style.backgroundColor = ''\r\n            // e.target.classList.toggle('.chosen_item')\r\n        } else {\r\n            arr.push(name)\r\n            // setList([...list,name])\r\n            // e.target.classList.toggle('.chosen_item')\r\n            e.target.style.backgroundColor = 'blueviolet'\r\n        }\r\n        console.log(arr)\r\n    }\r\n    let sendList = (rightId, whitelisted) => {\r\n        if (!props.right.prevelegion) {\r\n            debugger\r\n            axios.put('http://localhost:8001/right/update/' + rightId, { list: arr, prevelegion: true, whitelisted })\r\n        } else {\r\n            axios.put('http://localhost:8001/right/update/' + rightId, { list: arr })\r\n        }\r\n    }\r\n    return <div>\r\n        <div className='whitelist'>\r\n            <div className='popup_wrapper' onClick={(e) => { popup(e) }}>\r\n                <div class=\"box\">\r\n                    <a class=\"button\">{props.WLtitle}</a>\r\n                </div>\r\n\r\n                <div class=\"overlay\" >\r\n                    <div class=\"popup\">\r\n                        <h2>{props.WLtitle}</h2>\r\n                        <a class=\"close\">&times;</a>\r\n                        <div class=\"content\">\r\n                            <ul className='user_list'>\r\n                                {props.group.partners.map(item => {\r\n                                    if (props.right.list.some(list_item => list_item == item)) {\r\n                                        return <li\r\n                                            style={props.right.whitelisted\r\n                                                ? { backgroundColor: 'green' }\r\n                                                : { backgroundColor: 'red' }}\r\n                                            onClick={(e) => { createList(e, item) }}\r\n                                            className='user_item'>\r\n                                            {item}\r\n                                        </li>\r\n                                    } else {\r\n                                        return <li\r\n                                            onClick={(e) => { createList(e, item) }}\r\n                                            className='user_item'>\r\n                                            {item}\r\n                                        </li>\r\n                                    }\r\n                                }\r\n                                )}\r\n                            </ul>\r\n                            <button onClick={() => {\r\n                                sendList(props.right._id, true)\r\n                            }}>ОК</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='blacklist'>\r\n            <div className='popup_wrapper' onClick={(e) => { popup(e) }}>\r\n                <div class=\"box\">\r\n                    <a class=\"button\">{props.BLtitle}</a>\r\n                </div>\r\n\r\n                <div class=\"overlay\" >\r\n                    <div class=\"popup\">\r\n                        <h2>{props.BLtitle}</h2>\r\n                        <a class=\"close\">&times;</a>\r\n                        <div class=\"content\">\r\n                            <ul className='user_list'>\r\n                                {props.group.partners.map(item => {\r\n                                    if (props.right.list.some(list_item => list_item == item)) {\r\n                                        return <li\r\n                                            style={props.right.whitelisted\r\n                                                ? { backgroundColor: 'green' }\r\n                                                : { backgroundColor: 'red' }}\r\n                                            onClick={(e) => { createList(e, item) }}\r\n                                            className='user_item'>\r\n                                            {item}\r\n                                        </li>\r\n                                    } else {\r\n                                        return <li\r\n                                            onClick={(e) => { createList(e, item) }}\r\n                                            className='user_item'>\r\n                                            {item}\r\n                                        </li>\r\n                                    }\r\n                                }\r\n                                )}\r\n                            </ul>\r\n                            <button onClick={() => {\r\n                                sendList(props.right._id, false)\r\n                            }}>ОК</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default SingleRightPopup","C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\redux\\searchReduser.js",[],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\DAL\\api.js",[],"C:\\Users\\Pavel\\Desktop\\projects\\Role-acces-chat\\client\\src\\Components\\Chats\\CreateGroup.jsx",["379","380","381"],"import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction CreateGroup(props) {\r\n\r\n    let [usersList, setUsersList] = useState(null);\r\n    let [partnerArr, setPartner] = useState([]);\r\n    let arr = [];\r\n    let [groupName, setGroupName] = useState('');\r\n    let [roles, setRoles] = useState([\r\n        {\r\n            role: 'admin',\r\n            user_name: props.name\r\n        }\r\n    ]);\r\n\r\n    let addPartner = (e, partnerId, partnerName) => {\r\n        let role = {\r\n            role: 'partner',\r\n            user_name: partnerName\r\n        }\r\n        debugger\r\n        if (partnerArr.some(item => item === partnerName)) {\r\n            debugger\r\n            let index = arr.indexOf(partnerName);\r\n            setPartner(partnerArr.splice(index, 1))\r\n            setRoles(roles.splice(index, 1))\r\n            e.target.style.backgroundColor = ''\r\n        } else {\r\n            setPartner([...partnerArr, partnerName])\r\n            setRoles([...roles, role])\r\n            e.target.style.backgroundColor = 'blueviolet'\r\n        }\r\n        console.log(partnerArr)\r\n        console.log(roles)\r\n        // setPartner(Array.from(new Set([...partnerArr, partnerName])))\r\n    }\r\n    let createNewGroup = async () => {\r\n        debugger\r\n        await axios.post('http://localhost:8001/groups', {\r\n            name: groupName,\r\n            author: props.author,\r\n            partners: partnerArr,\r\n            roles\r\n        })\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let req = await axios.get('http://localhost:8001/friends/' + props.author);\r\n        setUsersList(req.data)\r\n    }, [])\r\n\r\n    return (\r\n        <div className='create_group'>\r\n\r\n                <label for='group_name'>Название группы</label>\r\n                <input id='group_name' onChange={(e) => { setGroupName(e.target.value) }} value={groupName}></input>\r\n                <div>\r\n                    <div>\r\n                        <h2>Выберете участников</h2>\r\n                        {!usersList ? null\r\n                            : <div class=\"content\">\r\n                                <ul className='user_list'>\r\n                                    {usersList.friends.map(item => {\r\n                                        if (item.initiator._id === props.author) {\r\n                                            return <li className='user_item'\r\n                                                onClick={(e) => { addPartner(e, item.partner._id, item.partner.name) }}>\r\n                                                {item.partner.name}\r\n                                            </li>\r\n                                        }\r\n                                        if (item.partner._id === props.author) {\r\n                                            return <li className='user_item'\r\n                                                onClick={(e) => { addPartner(e, item.initiator._id, item.initiator.name) }}>\r\n                                                {item.initiator.name}\r\n                                            </li>\r\n                                        }\r\n                                    }\r\n                                    )}\r\n                                </ul>\r\n                                <button disabled={partnerArr.length === 0 ? true : false}\r\n                                    onClick={() => {\r\n                                        debugger\r\n                                        createNewGroup()\r\n                                    }}>\r\n                                    Создать группу\r\n                                </button>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateGroup;",{"ruleId":"382","severity":1,"message":"383","line":5,"column":10,"nodeType":"384","messageId":"385","endLine":5,"endColumn":23},{"ruleId":"386","replacedBy":"387"},{"ruleId":"388","replacedBy":"389"},{"ruleId":"382","severity":1,"message":"390","line":2,"column":10,"nodeType":"384","messageId":"385","endLine":2,"endColumn":21},{"ruleId":"382","severity":1,"message":"391","line":4,"column":25,"nodeType":"384","messageId":"385","endLine":4,"endColumn":30},{"ruleId":"382","severity":1,"message":"392","line":4,"column":32,"nodeType":"384","messageId":"385","endLine":4,"endColumn":38},{"ruleId":"382","severity":1,"message":"393","line":4,"column":40,"nodeType":"384","messageId":"385","endLine":4,"endColumn":50},{"ruleId":"382","severity":1,"message":"394","line":6,"column":8,"nodeType":"384","messageId":"385","endLine":6,"endColumn":12},{"ruleId":"382","severity":1,"message":"395","line":7,"column":8,"nodeType":"384","messageId":"385","endLine":7,"endColumn":16},{"ruleId":"382","severity":1,"message":"396","line":8,"column":8,"nodeType":"384","messageId":"385","endLine":8,"endColumn":12},{"ruleId":"382","severity":1,"message":"397","line":9,"column":8,"nodeType":"384","messageId":"385","endLine":9,"endColumn":17},{"ruleId":"382","severity":1,"message":"398","line":15,"column":8,"nodeType":"384","messageId":"385","endLine":15,"endColumn":13},{"ruleId":"382","severity":1,"message":"399","line":15,"column":15,"nodeType":"384","messageId":"385","endLine":15,"endColumn":23},{"ruleId":"400","severity":1,"message":"401","line":17,"column":13,"nodeType":"402","endLine":30,"endColumn":4},{"ruleId":"400","severity":1,"message":"403","line":30,"column":6,"nodeType":"404","endLine":30,"endColumn":8,"suggestions":"405"},{"ruleId":"382","severity":1,"message":"397","line":7,"column":8,"nodeType":"384","messageId":"385","endLine":7,"endColumn":17},{"ruleId":"382","severity":1,"message":"406","line":2,"column":17,"nodeType":"384","messageId":"385","endLine":2,"endColumn":25},{"ruleId":"382","severity":1,"message":"407","line":5,"column":8,"nodeType":"384","messageId":"385","endLine":5,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":93,"column":1,"nodeType":"384","messageId":"410","endLine":93,"endColumn":9},{"ruleId":"411","severity":1,"message":"412","line":11,"column":17,"nodeType":"413","endLine":11,"endColumn":33},{"ruleId":"411","severity":1,"message":"412","line":22,"column":29,"nodeType":"413","endLine":22,"endColumn":54},{"ruleId":"411","severity":1,"message":"412","line":30,"column":57,"nodeType":"413","endLine":30,"endColumn":116},{"ruleId":"411","severity":1,"message":"412","line":43,"column":121,"nodeType":"413","endLine":43,"endColumn":163},{"ruleId":"382","severity":1,"message":"414","line":5,"column":39,"nodeType":"384","messageId":"385","endLine":5,"endColumn":54},{"ruleId":"382","severity":1,"message":"415","line":1,"column":7,"nodeType":"384","messageId":"385","endLine":1,"endColumn":12},{"ruleId":"382","severity":1,"message":"416","line":5,"column":7,"nodeType":"384","messageId":"385","endLine":5,"endColumn":18},{"ruleId":"386","replacedBy":"417"},{"ruleId":"388","replacedBy":"418"},{"ruleId":"382","severity":1,"message":"406","line":2,"column":17,"nodeType":"384","messageId":"385","endLine":2,"endColumn":25},{"ruleId":"382","severity":1,"message":"407","line":5,"column":8,"nodeType":"384","messageId":"385","endLine":5,"endColumn":19},{"ruleId":"382","severity":1,"message":"419","line":13,"column":10,"nodeType":"384","messageId":"385","endLine":13,"endColumn":17},{"ruleId":"408","severity":1,"message":"420","line":97,"column":1,"nodeType":"384","messageId":"410","endLine":97,"endColumn":13},{"ruleId":"382","severity":1,"message":"421","line":104,"column":17,"nodeType":"384","messageId":"385","endLine":104,"endColumn":20},{"ruleId":"382","severity":1,"message":"419","line":1,"column":10,"nodeType":"384","messageId":"385","endLine":1,"endColumn":17},{"ruleId":"382","severity":1,"message":"383","line":5,"column":10,"nodeType":"384","messageId":"385","endLine":5,"endColumn":23},{"ruleId":"386","replacedBy":"422"},{"ruleId":"388","replacedBy":"423"},{"ruleId":"382","severity":1,"message":"398","line":17,"column":8,"nodeType":"384","messageId":"385","endLine":17,"endColumn":13},{"ruleId":"382","severity":1,"message":"399","line":17,"column":15,"nodeType":"384","messageId":"385","endLine":17,"endColumn":23},{"ruleId":"382","severity":1,"message":"424","line":18,"column":8,"nodeType":"384","messageId":"385","endLine":18,"endColumn":13},{"ruleId":"382","severity":1,"message":"425","line":18,"column":15,"nodeType":"384","messageId":"385","endLine":18,"endColumn":23},{"ruleId":"382","severity":1,"message":"426","line":19,"column":7,"nodeType":"384","messageId":"385","endLine":19,"endColumn":15},{"ruleId":"400","severity":1,"message":"401","line":20,"column":13,"nodeType":"402","endLine":117,"endColumn":4},{"ruleId":"427","severity":1,"message":"428","line":56,"column":48,"nodeType":"429","messageId":"430","endLine":56,"endColumn":50},{"ruleId":"427","severity":1,"message":"428","line":57,"column":13,"nodeType":"429","messageId":"430","endLine":57,"endColumn":15},{"ruleId":"427","severity":1,"message":"431","line":57,"column":13,"nodeType":"429","messageId":"430","endLine":57,"endColumn":15},{"ruleId":"427","severity":1,"message":"431","line":57,"column":50,"nodeType":"429","messageId":"430","endLine":57,"endColumn":52},{"ruleId":"427","severity":1,"message":"431","line":58,"column":13,"nodeType":"429","messageId":"430","endLine":58,"endColumn":15},{"ruleId":"427","severity":1,"message":"431","line":58,"column":51,"nodeType":"429","messageId":"430","endLine":58,"endColumn":53},{"ruleId":"400","severity":1,"message":"403","line":117,"column":6,"nodeType":"404","endLine":117,"endColumn":8,"suggestions":"432"},{"ruleId":"382","severity":1,"message":"415","line":1,"column":7,"nodeType":"384","messageId":"385","endLine":1,"endColumn":12},{"ruleId":"382","severity":1,"message":"416","line":5,"column":7,"nodeType":"384","messageId":"385","endLine":5,"endColumn":18},{"ruleId":"382","severity":1,"message":"397","line":7,"column":8,"nodeType":"384","messageId":"385","endLine":7,"endColumn":17},{"ruleId":"400","severity":1,"message":"401","line":21,"column":15,"nodeType":"402","endLine":24,"endColumn":6},{"ruleId":"400","severity":1,"message":"433","line":24,"column":8,"nodeType":"404","endLine":24,"endColumn":10,"suggestions":"434"},{"ruleId":"435","severity":1,"message":"436","line":78,"column":50,"nodeType":"437","messageId":"438","endLine":78,"endColumn":52},{"ruleId":"435","severity":1,"message":"436","line":80,"column":55,"nodeType":"437","messageId":"438","endLine":80,"endColumn":57},{"ruleId":"439","severity":1,"message":"440","line":91,"column":46,"nodeType":"437","messageId":"441","endLine":91,"endColumn":47},{"ruleId":"411","severity":1,"message":"412","line":94,"column":21,"nodeType":"413","endLine":94,"endColumn":42},{"ruleId":"442","severity":1,"message":"443","line":98,"column":57,"nodeType":"402","messageId":"444","endLine":98,"endColumn":59},{"ruleId":"382","severity":1,"message":"406","line":2,"column":17,"nodeType":"384","messageId":"385","endLine":2,"endColumn":25},{"ruleId":"382","severity":1,"message":"407","line":5,"column":8,"nodeType":"384","messageId":"385","endLine":5,"endColumn":19},{"ruleId":"382","severity":1,"message":"419","line":13,"column":10,"nodeType":"384","messageId":"385","endLine":13,"endColumn":17},{"ruleId":"408","severity":1,"message":"420","line":97,"column":1,"nodeType":"384","messageId":"410","endLine":97,"endColumn":13},{"ruleId":"382","severity":1,"message":"421","line":104,"column":17,"nodeType":"384","messageId":"385","endLine":104,"endColumn":20},{"ruleId":"382","severity":1,"message":"406","line":2,"column":17,"nodeType":"384","messageId":"385","endLine":2,"endColumn":25},{"ruleId":"382","severity":1,"message":"407","line":5,"column":8,"nodeType":"384","messageId":"385","endLine":5,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":93,"column":1,"nodeType":"384","messageId":"410","endLine":93,"endColumn":9},{"ruleId":"382","severity":1,"message":"445","line":3,"column":8,"nodeType":"384","messageId":"385","endLine":3,"endColumn":13},{"ruleId":"382","severity":1,"message":"446","line":4,"column":10,"nodeType":"384","messageId":"385","endLine":4,"endColumn":19},{"ruleId":"382","severity":1,"message":"447","line":5,"column":8,"nodeType":"384","messageId":"385","endLine":5,"endColumn":13},{"ruleId":"382","severity":1,"message":"397","line":7,"column":8,"nodeType":"384","messageId":"385","endLine":7,"endColumn":17},{"ruleId":"448","severity":1,"message":"449","line":15,"column":5,"nodeType":"450","messageId":"451","endLine":15,"endColumn":32},{"ruleId":"382","severity":1,"message":"452","line":2,"column":10,"nodeType":"384","messageId":"385","endLine":2,"endColumn":12},{"ruleId":"382","severity":1,"message":"446","line":5,"column":10,"nodeType":"384","messageId":"385","endLine":5,"endColumn":19},{"ruleId":"382","severity":1,"message":"453","line":11,"column":9,"nodeType":"384","messageId":"385","endLine":11,"endColumn":15},{"ruleId":"411","severity":1,"message":"412","line":64,"column":57,"nodeType":"413","endLine":64,"endColumn":116},{"ruleId":"411","severity":1,"message":"412","line":82,"column":127,"nodeType":"413","endLine":82,"endColumn":169},{"ruleId":"382","severity":1,"message":"454","line":7,"column":8,"nodeType":"384","messageId":"385","endLine":7,"endColumn":20},{"ruleId":"382","severity":1,"message":"455","line":13,"column":10,"nodeType":"384","messageId":"385","endLine":13,"endColumn":15},{"ruleId":"382","severity":1,"message":"456","line":13,"column":16,"nodeType":"384","messageId":"385","endLine":13,"endColumn":24},{"ruleId":"400","severity":1,"message":"401","line":14,"column":15,"nodeType":"402","endLine":22,"endColumn":6},{"ruleId":"400","severity":1,"message":"403","line":22,"column":7,"nodeType":"404","endLine":22,"endColumn":28,"suggestions":"457"},{"ruleId":"400","severity":1,"message":"401","line":23,"column":15,"nodeType":"402","endLine":30,"endColumn":6},{"ruleId":"400","severity":1,"message":"458","line":30,"column":8,"nodeType":"404","endLine":30,"endColumn":36,"suggestions":"459"},{"ruleId":"400","severity":1,"message":"401","line":64,"column":15,"nodeType":"402","endLine":67,"endColumn":6},{"ruleId":"400","severity":1,"message":"433","line":67,"column":8,"nodeType":"404","endLine":67,"endColumn":10,"suggestions":"460"},{"ruleId":"400","severity":1,"message":"461","line":72,"column":8,"nodeType":"404","endLine":72,"endColumn":24,"suggestions":"462"},{"ruleId":"442","severity":1,"message":"443","line":151,"column":54,"nodeType":"402","messageId":"444","endLine":151,"endColumn":56},{"ruleId":"411","severity":1,"message":"412","line":8,"column":17,"nodeType":"413","endLine":8,"endColumn":33},{"ruleId":"382","severity":1,"message":"463","line":1,"column":10,"nodeType":"384","messageId":"385","endLine":1,"endColumn":16},{"ruleId":"382","severity":1,"message":"452","line":2,"column":10,"nodeType":"384","messageId":"385","endLine":2,"endColumn":12},{"ruleId":"411","severity":1,"message":"412","line":11,"column":9,"nodeType":"413","endLine":11,"endColumn":34},{"ruleId":"435","severity":1,"message":"436","line":64,"column":56,"nodeType":"437","messageId":"438","endLine":64,"endColumn":58},{"ruleId":"400","severity":1,"message":"401","line":19,"column":15,"nodeType":"402","endLine":67,"endColumn":6},{"ruleId":"400","severity":1,"message":"403","line":67,"column":8,"nodeType":"404","endLine":67,"endColumn":37,"suggestions":"464"},{"ruleId":"382","severity":1,"message":"406","line":2,"column":21,"nodeType":"384","messageId":"385","endLine":2,"endColumn":29},{"ruleId":"400","severity":1,"message":"401","line":11,"column":15,"nodeType":"402","endLine":14,"endColumn":6},{"ruleId":"400","severity":1,"message":"403","line":14,"column":8,"nodeType":"404","endLine":14,"endColumn":10,"suggestions":"465"},{"ruleId":"382","severity":1,"message":"446","line":2,"column":10,"nodeType":"384","messageId":"385","endLine":2,"endColumn":19},{"ruleId":"382","severity":1,"message":"466","line":18,"column":10,"nodeType":"384","messageId":"385","endLine":18,"endColumn":20},{"ruleId":"382","severity":1,"message":"467","line":18,"column":22,"nodeType":"384","messageId":"385","endLine":18,"endColumn":35},{"ruleId":"382","severity":1,"message":"468","line":19,"column":16,"nodeType":"384","messageId":"385","endLine":19,"endColumn":23},{"ruleId":"382","severity":1,"message":"469","line":20,"column":9,"nodeType":"384","messageId":"385","endLine":20,"endColumn":15},{"ruleId":"382","severity":1,"message":"470","line":21,"column":13,"nodeType":"384","messageId":"385","endLine":21,"endColumn":19},{"ruleId":"382","severity":1,"message":"452","line":2,"column":10,"nodeType":"384","messageId":"385","endLine":2,"endColumn":12},{"ruleId":"382","severity":1,"message":"463","line":3,"column":10,"nodeType":"384","messageId":"385","endLine":3,"endColumn":16},{"ruleId":"382","severity":1,"message":"397","line":4,"column":8,"nodeType":"384","messageId":"385","endLine":4,"endColumn":17},{"ruleId":"382","severity":1,"message":"406","line":5,"column":10,"nodeType":"384","messageId":"385","endLine":5,"endColumn":18},{"ruleId":"382","severity":1,"message":"447","line":6,"column":8,"nodeType":"384","messageId":"385","endLine":6,"endColumn":13},{"ruleId":"382","severity":1,"message":"471","line":8,"column":9,"nodeType":"384","messageId":"385","endLine":8,"endColumn":14},{"ruleId":"435","severity":1,"message":"436","line":9,"column":32,"nodeType":"437","messageId":"438","endLine":9,"endColumn":34},{"ruleId":"435","severity":1,"message":"436","line":10,"column":35,"nodeType":"437","messageId":"438","endLine":10,"endColumn":37},{"ruleId":"435","severity":1,"message":"436","line":10,"column":70,"nodeType":"437","messageId":"438","endLine":10,"endColumn":72},{"ruleId":"382","severity":1,"message":"472","line":12,"column":9,"nodeType":"384","messageId":"385","endLine":12,"endColumn":19},{"ruleId":"382","severity":1,"message":"473","line":26,"column":9,"nodeType":"384","messageId":"385","endLine":26,"endColumn":17},{"ruleId":"400","severity":1,"message":"401","line":11,"column":15,"nodeType":"402","endLine":14,"endColumn":6},{"ruleId":"400","severity":1,"message":"474","line":14,"column":8,"nodeType":"404","endLine":14,"endColumn":10,"suggestions":"475"},{"ruleId":"400","severity":1,"message":"401","line":7,"column":15,"nodeType":"402","endLine":10,"endColumn":6},{"ruleId":"400","severity":1,"message":"476","line":10,"column":8,"nodeType":"404","endLine":10,"endColumn":10,"suggestions":"477"},{"ruleId":"435","severity":1,"message":"436","line":12,"column":32,"nodeType":"437","messageId":"438","endLine":12,"endColumn":34},{"ruleId":"435","severity":1,"message":"436","line":13,"column":35,"nodeType":"437","messageId":"438","endLine":13,"endColumn":37},{"ruleId":"435","severity":1,"message":"436","line":13,"column":70,"nodeType":"437","messageId":"438","endLine":13,"endColumn":72},{"ruleId":"411","severity":1,"message":"412","line":35,"column":21,"nodeType":"413","endLine":35,"endColumn":39},{"ruleId":"411","severity":1,"message":"412","line":41,"column":25,"nodeType":"413","endLine":41,"endColumn":42},{"ruleId":"386","replacedBy":"478"},{"ruleId":"388","replacedBy":"479"},{"ruleId":"382","severity":1,"message":"446","line":2,"column":10,"nodeType":"384","messageId":"385","endLine":2,"endColumn":19},{"ruleId":"382","severity":1,"message":"397","line":3,"column":8,"nodeType":"384","messageId":"385","endLine":3,"endColumn":17},{"ruleId":"382","severity":1,"message":"480","line":10,"column":10,"nodeType":"384","messageId":"385","endLine":10,"endColumn":15},{"ruleId":"382","severity":1,"message":"481","line":10,"column":17,"nodeType":"384","messageId":"385","endLine":10,"endColumn":25},{"ruleId":"382","severity":1,"message":"482","line":15,"column":9,"nodeType":"384","messageId":"385","endLine":15,"endColumn":21},{"ruleId":"411","severity":1,"message":"412","line":69,"column":13,"nodeType":"413","endLine":69,"endColumn":31},{"ruleId":"435","severity":1,"message":"436","line":8,"column":32,"nodeType":"437","messageId":"438","endLine":8,"endColumn":34},{"ruleId":"435","severity":1,"message":"436","line":9,"column":35,"nodeType":"437","messageId":"438","endLine":9,"endColumn":37},{"ruleId":"435","severity":1,"message":"436","line":9,"column":70,"nodeType":"437","messageId":"438","endLine":9,"endColumn":72},{"ruleId":"411","severity":1,"message":"412","line":37,"column":21,"nodeType":"413","endLine":37,"endColumn":39},{"ruleId":"411","severity":1,"message":"412","line":43,"column":25,"nodeType":"413","endLine":43,"endColumn":42},{"ruleId":"435","severity":1,"message":"436","line":47,"column":86,"nodeType":"437","messageId":"438","endLine":47,"endColumn":88},{"ruleId":"411","severity":1,"message":"412","line":78,"column":21,"nodeType":"413","endLine":78,"endColumn":39},{"ruleId":"411","severity":1,"message":"412","line":84,"column":25,"nodeType":"413","endLine":84,"endColumn":42},{"ruleId":"435","severity":1,"message":"436","line":88,"column":86,"nodeType":"437","messageId":"438","endLine":88,"endColumn":88},{"ruleId":"400","severity":1,"message":"401","line":48,"column":15,"nodeType":"402","endLine":51,"endColumn":6},{"ruleId":"400","severity":1,"message":"433","line":51,"column":8,"nodeType":"404","endLine":51,"endColumn":10,"suggestions":"483"},{"ruleId":"442","severity":1,"message":"443","line":64,"column":65,"nodeType":"402","messageId":"444","endLine":64,"endColumn":67},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["484"],"no-negated-in-lhs",["485"],"'useCallback' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'withRouter' is defined but never used.","'Auth' is defined but never used.","'Register' is defined but never used.","'Main' is defined but never used.","'Preloader' is defined but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["486"],"'useState' is defined but never used.","'CardActions' is defined but never used.","no-func-assign","'AuthForm' is a function.","isAFunction","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'applyMiddleware' is assigned a value but never used.","'LOGIN' is assigned a value but never used.","'SET_USER_ID' is assigned a value but never used.",["484"],["485"],"'NavLink' is defined but never used.","'RegisterForm' is a function.","'req' is assigned a value but never used.",["484"],["485"],"'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'usersArr' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.",["487"],"React Hook useEffect has a missing dependency: 'props.author'. Either include it or remove the dependency array.",["488"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Chats' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'io' is defined but never used.","'rights' is assigned a value but never used.","'CreateChanel' is defined but never used.","'group' is assigned a value but never used.","'setGroup' is assigned a value but never used.",["489"],"React Hook useEffect has a missing dependency: 'props.name'. Either include it or remove the dependency array.",["490"],["491"],"React Hook useEffect has a missing dependency: 'searched.requestNumber'. Either include it or remove the dependency array.",["492"],"'socket' is defined but never used.",["493"],["494"],"'createForm' is assigned a value but never used.","'setCreateForm' is assigned a value but never used.","'setText' is assigned a value but never used.","'Chanel' is assigned a value but never used.","'chanel' is assigned a value but never used.","'popup' is assigned a value but never used.","'createList' is assigned a value but never used.","'sendList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.selectedGroup._id'. Either include it or remove the dependency array.",["495"],"React Hook useEffect has missing dependencies: 'props.group._id' and 'props.role'. Either include them or remove the dependency array.",["496"],["484"],["485"],"'allow' is assigned a value but never used.","'setAllow' is assigned a value but never used.","'seeUserslist' is assigned a value but never used.",["497"],"no-global-assign","no-unsafe-negation",{"desc":"498","fix":"499"},{"desc":"498","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"501","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"498","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"501","fix":"517"},"Update the dependencies array to be: [props]",{"range":"518","text":"519"},{"range":"520","text":"519"},"Update the dependencies array to be: [props.author]",{"range":"521","text":"522"},"Update the dependencies array to be: [props, props.selectedGroup]",{"range":"523","text":"524"},"Update the dependencies array to be: [props.match.params.groupId, props.name]",{"range":"525","text":"526"},{"range":"527","text":"522"},"Update the dependencies array to be: [props.searched, searched.requestNumber]",{"range":"528","text":"529"},"Update the dependencies array to be: [props, props.match.params.chanelId]",{"range":"530","text":"531"},{"range":"532","text":"519"},"Update the dependencies array to be: [props.selectedGroup._id]",{"range":"533","text":"534"},"Update the dependencies array to be: [props.group._id, props.role]",{"range":"535","text":"536"},{"range":"537","text":"522"},[1018,1020],"[props]",[4142,4144],[988,990],"[props.author]",[839,860],"[props, props.selectedGroup]",[1305,1333],"[props.match.params.groupId, props.name]",[1735,1737],[1914,1930],"[props.searched, searched.requestNumber]",[3114,3143],"[props, props.match.params.chanelId]",[514,516],[546,548],"[props.selectedGroup._id]",[345,347],"[props.group._id, props.role]",[1608,1610]]